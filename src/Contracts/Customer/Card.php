<?php

/*
* <auto-generated>
*     This code was generated by a Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Contracts\Customer;



/**
*	Properties of a credit card used to submit payment for an order.
*/
class Card
{
	/**
	*The masked credit card number part returned from the payment gateway.
	*/
	public $cardNumberPart;

	/**
	*The type of credit card, such as Visa or Amex.
	*/
	public $cardType;

	/**
	*Unique identifier of the customer account contact associated with the credit card.
	*/
	public $contactId;

	/**
	*The two-digit month a credit card expires for a payment method.
	*/
	public $expireMonth;

	/**
	*The four-digit year the credit card expires for a payment method.
	*/
	public $expireYear;

	/**
	*Unique identifier of the source property, such as a catalog, discount, order, or email template.For a product field it will be the name of the field.For a category ID, must be a positive integer not greater than 2000000. By default,  auto-generates a category ID when categories are created. If you want to specify an ID during creation (which preserves category link relationships when migrating tenant data from one sandbox to another), you must also include the  query string in the endpoint. For example, . Then, use the  property to specify the desired category ID.For a product attribute it will be the Attribute FQN.For a document, the ID must be specified as a 32 character, case-insensitive, alphanumeric string. You can specify the ID as 32 sequential characters or as groups separated by dashes in the format 8-4-4-4-12. For example, or.For email templates, the ID must be one of the following values:			
	*/
	public $id;

	/**
	*AÂ boolean that signals whether this credit card is the default payment method for this customer account.
	*/
	public $isDefaultPayMethod;

	/**
	*The full name printed on a credit card. The name should match what is printed on the card exactly, used in validation during a payment.
	*/
	public $nameOnCard;

}

?>
