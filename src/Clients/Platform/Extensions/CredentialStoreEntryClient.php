<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Platform\Extensions;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Platform\Extensions\CredentialStoreEntryUrl;


/**
* The CredentialStore resource allows you to encrypt and store sensitive data on your tenant. You can then decrypt and access that data using an Arc.js application, as described in the Arc.js [Programming Patterns](https://www.mozu.com/docs/developer/arcjs-guides/programming-patterns.htm#securely_store_and_access_sensitive_data) topic.
*/
class CredentialStoreEntryClient {

	/**
	* Encrypts and stores data contained in the  JSON object. You can decrypt and access the secured data using an Arc.js application, as described in the Arc.js [Programming Patterns](https://www.mozu.com/docs/developer/arcjs-guides/programming-patterns.htm#securely_store_and_access_sensitive_data) topic.
	*
	* @param CredentialStoreEntry $credentials 
	*/
	public static function storeCredentialsClient($credentials)
	{
		$url = CredentialStoreEntryUrl::storeCredentialsUrl();
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($credentials);
		return $mozuClient;

	}
	
	
}

?>

