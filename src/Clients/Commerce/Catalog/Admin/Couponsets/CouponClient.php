<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce\Catalog\Admin\Couponsets;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\Catalog\Admin\Couponsets\CouponUrl;


/**
* commerce/catalog/admin/couponsets/coupons related resources. DOCUMENT_HERE 
*/
class CouponClient {

	/**
	* couponsets-coupons Get GetCoupon description DOCUMENT_HERE 
	*
	* @param string $couponCode Code associated with the coupon to remove from the cart.
	* @param string $couponSetCode 
	* @param bool $includeCounts 
	* @param string $responseFields A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.
	* @return MozuClient
	*/
	public static function getCouponClient($couponSetCode, $couponCode, $includeCounts =  null, $responseFields =  null)
	{
		$url = CouponUrl::getCouponUrl($couponCode, $couponSetCode, $includeCounts, $responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* couponsets-coupons Get GetCoupons description DOCUMENT_HERE 
	*
	* @param string $couponSetCode 
	* @param string $filter A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.
	* @param bool $includeCounts 
	* @param int $pageSize The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.
	* @param string $responseFields A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.
	* @param string $sortBy The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.
	* @param int $startIndex When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.
	* @return MozuClient
	*/
	public static function getCouponsClient($couponSetCode, $startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $includeCounts =  null, $responseFields =  null)
	{
		$url = CouponUrl::getCouponsUrl($couponSetCode, $filter, $includeCounts, $pageSize, $responseFields, $sortBy, $startIndex);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* couponsets-coupons Post AddCoupons description DOCUMENT_HERE 
	*
	* @param string $couponSetCode 
	* @param array|Coupon $coupons Mozu.ProductAdmin.Contracts.Coupon ApiType DOCUMENT_HERE 
	*/
	public static function addCouponsClient($coupons, $couponSetCode)
	{
		$url = CouponUrl::addCouponsUrl($couponSetCode);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($coupons);
		return $mozuClient;

	}
	
	/**
	* couponsets-coupons Post DeleteCoupons description DOCUMENT_HERE 
	*
	* @param string $couponSetCode 
	* @param array|string $couponCodes 
	*/
	public static function deleteCouponsClient($couponCodes, $couponSetCode)
	{
		$url = CouponUrl::deleteCouponsUrl($couponSetCode);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($couponCodes);
		return $mozuClient;

	}
	
	/**
	* couponsets-coupons Delete DeleteCoupon description DOCUMENT_HERE 
	*
	* @param string $couponCode Code associated with the coupon to remove from the cart.
	* @param string $couponSetCode 
	*/
	public static function deleteCouponClient($couponSetCode, $couponCode)
	{
		$url = CouponUrl::deleteCouponUrl($couponCode, $couponSetCode);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	
}

?>

