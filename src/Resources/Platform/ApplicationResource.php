<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Platform;

use Mozu\Api\Clients\Platform\ApplicationClient;
use Mozu\Api\ApiContext;


/**
* platform/developer related resources. DOCUMENT_HERE 
*/
class ApplicationResource {

				



	/**
	* platform-developer Get GetAppPackageNames description DOCUMENT_HERE 
	*
	* @param string $applicationKey The application key uniquely identifies the developer namespace, application ID, version, and package in Dev Center. The format is {Dev Account namespace}.{Application ID}.{Application Version}.{Package name}.
	* @param string $responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	* @return PackageNamesCollection 
	* @deprecated deprecated since version 1.17
	*/
	public function getAppPackageNames($applicationKey, $responseFields =  null)
	{
		$mozuClient = ApplicationClient::getAppPackageNamesClient($applicationKey, $responseFields);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* platform-developer Get GetAppPackageNames description DOCUMENT_HERE 
	*
	* @param string $applicationKey The application key uniquely identifies the developer namespace, application ID, version, and package in Dev Center. The format is {Dev Account namespace}.{Application ID}.{Application Version}.{Package name}.
	* @param string $responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getAppPackageNamesAsync($applicationKey, $responseFields =  null)
	{
		$mozuClient = ApplicationClient::getAppPackageNamesClient($applicationKey, $responseFields);
		return $mozuClient->executeAsync();

	}
	
	/**
	* platform-developer Get GetAppVersions description DOCUMENT_HERE 
	*
	* @param string $nsAndAppId The application key uniquely identifies the developer namespace, application ID, version, and package in Dev Center. The format is {Dev Account namespace}.{Application ID}.{Application Version}.{Package name}.
	* @param string $responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	* @return ApplicationVersionsCollection 
	* @deprecated deprecated since version 1.17
	*/
	public function getAppVersions($nsAndAppId, $responseFields =  null)
	{
		$mozuClient = ApplicationClient::getAppVersionsClient($nsAndAppId, $responseFields);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* platform-developer Get GetAppVersions description DOCUMENT_HERE 
	*
	* @param string $nsAndAppId The application key uniquely identifies the developer namespace, application ID, version, and package in Dev Center. The format is {Dev Account namespace}.{Application ID}.{Application Version}.{Package name}.
	* @param string $responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getAppVersionsAsync($nsAndAppId, $responseFields =  null)
	{
		$mozuClient = ApplicationClient::getAppVersionsClient($nsAndAppId, $responseFields);
		return $mozuClient->executeAsync();

	}
	
	/**
	* platform-developer Get GetPackageFileMetadata description DOCUMENT_HERE 
	*
	* @param string $applicationKey The application key uniquely identifies the developer namespace, application ID, version, and package in Dev Center. The format is {Dev Account namespace}.{Application ID}.{Application Version}.{Package name}.
	* @param string $filepath Represents the file name and location.
	* @param string $responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	* @return FileMetadata 
	* @deprecated deprecated since version 1.17
	*/
	public function getPackageFileMetadata($applicationKey, $filepath, $responseFields =  null)
	{
		$mozuClient = ApplicationClient::getPackageFileMetadataClient($applicationKey, $filepath, $responseFields);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* platform-developer Get GetPackageFileMetadata description DOCUMENT_HERE 
	*
	* @param string $applicationKey The application key uniquely identifies the developer namespace, application ID, version, and package in Dev Center. The format is {Dev Account namespace}.{Application ID}.{Application Version}.{Package name}.
	* @param string $filepath Represents the file name and location.
	* @param string $responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getPackageFileMetadataAsync($applicationKey, $filepath, $responseFields =  null)
	{
		$mozuClient = ApplicationClient::getPackageFileMetadataClient($applicationKey, $filepath, $responseFields);
		return $mozuClient->executeAsync();

	}
	
	/**
	* platform-developer Get GetPackageMetadata description DOCUMENT_HERE 
	*
	* @param string $applicationKey The application key uniquely identifies the developer namespace, application ID, version, and package in Dev Center. The format is {Dev Account namespace}.{Application ID}.{Application Version}.{Package name}.
	* @param string $responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	* @return FolderMetadata 
	* @deprecated deprecated since version 1.17
	*/
	public function getPackageMetadata($applicationKey, $responseFields =  null)
	{
		$mozuClient = ApplicationClient::getPackageMetadataClient($applicationKey, $responseFields);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* platform-developer Get GetPackageMetadata description DOCUMENT_HERE 
	*
	* @param string $applicationKey The application key uniquely identifies the developer namespace, application ID, version, and package in Dev Center. The format is {Dev Account namespace}.{Application ID}.{Application Version}.{Package name}.
	* @param string $responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getPackageMetadataAsync($applicationKey, $responseFields =  null)
	{
		$mozuClient = ApplicationClient::getPackageMetadataClient($applicationKey, $responseFields);
		return $mozuClient->executeAsync();

	}
	
	/**
	* platform-developer Post UpsertPackageFile description DOCUMENT_HERE 
	*
	* @param string $applicationKey The application key uniquely identifies the developer namespace, application ID, version, and package in Dev Center. The format is {Dev Account namespace}.{Application ID}.{Application Version}.{Package name}.
	* @param string $filepath The application key uniquely identifies the developer namespace, application ID, version, and package in Dev Center. The format is {Dev Account namespace}.{Application ID}.{Application Version}.{Package name}.
	* @param string $lastModifiedTime The date and time of the last file insert or update. This parameter is optional.
	* @param string $responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	* @param Stream $stream Data stream that delivers information. Used to input and output data.
	* @return FileMetadata 
	* @deprecated deprecated since version 1.17
	*/
	public function upsertPackageFile($stream, $applicationKey, $filepath, $lastModifiedTime =  null, $responseFields =  null, $contentType= null)
	{
		$mozuClient = ApplicationClient::upsertPackageFileClient($stream, $applicationKey, $filepath, $lastModifiedTime, $responseFields, $contentType);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* platform-developer Post UpsertPackageFile description DOCUMENT_HERE 
	*
	* @param string $applicationKey The application key uniquely identifies the developer namespace, application ID, version, and package in Dev Center. The format is {Dev Account namespace}.{Application ID}.{Application Version}.{Package name}.
	* @param string $filepath The application key uniquely identifies the developer namespace, application ID, version, and package in Dev Center. The format is {Dev Account namespace}.{Application ID}.{Application Version}.{Package name}.
	* @param string $lastModifiedTime The date and time of the last file insert or update. This parameter is optional.
	* @param string $responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function upsertPackageFileAsync($stream, $applicationKey, $filepath, $lastModifiedTime =  null, $responseFields =  null, $contentType= null)
	{
		$mozuClient = ApplicationClient::upsertPackageFileClient($stream, $applicationKey, $filepath, $lastModifiedTime, $responseFields, $contentType);
		return $mozuClient->executeAsync();

	}
	
	/**
	* platform-developer Post RenamePackageFile description DOCUMENT_HERE 
	*
	* @param string $applicationKey The application key uniquely identifies the developer namespace, application ID, version, and package in Dev Center. The format is {Dev Account namespace}.{Application ID}.{Application Version}.{Package name}.
	* @param string $responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	* @param RenameInfo $renameInfo Information required to update the name of a file in a package, which consists of the original name and the new name.
	* @return FileMetadata 
	* @deprecated deprecated since version 1.17
	*/
	public function renamePackageFile($renameInfo, $applicationKey, $responseFields =  null)
	{
		$mozuClient = ApplicationClient::renamePackageFileClient($renameInfo, $applicationKey, $responseFields);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* platform-developer Post RenamePackageFile description DOCUMENT_HERE 
	*
	* @param string $applicationKey The application key uniquely identifies the developer namespace, application ID, version, and package in Dev Center. The format is {Dev Account namespace}.{Application ID}.{Application Version}.{Package name}.
	* @param string $responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function renamePackageFileAsync($renameInfo, $applicationKey, $responseFields =  null)
	{
		$mozuClient = ApplicationClient::renamePackageFileClient($renameInfo, $applicationKey, $responseFields);
		return $mozuClient->executeAsync();

	}
	
	/**
	* platform-developer Delete DeletePackageFile description DOCUMENT_HERE 
	*
	* @param string $applicationKey The application key uniquely identifies the developer namespace, application ID, version, and package in Dev Center. The format is {Dev Account namespace}.{Application ID}.{Application Version}.{Package name}.
	* @param string $filepath Represents the file name and location.
	* @deprecated deprecated since version 1.17
	*/
	public function deletePackageFile($applicationKey, $filepath)
	{
		$mozuClient = ApplicationClient::deletePackageFileClient($applicationKey, $filepath);
		$mozuClient->execute();

	}
	
/**
	* platform-developer Delete DeletePackageFile description DOCUMENT_HERE 
	*
	* @param string $applicationKey The application key uniquely identifies the developer namespace, application ID, version, and package in Dev Center. The format is {Dev Account namespace}.{Application ID}.{Application Version}.{Package name}.
	* @param string $filepath Represents the file name and location.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deletePackageFileAsync($applicationKey, $filepath)
	{
		$mozuClient = ApplicationClient::deletePackageFileClient($applicationKey, $filepath);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

