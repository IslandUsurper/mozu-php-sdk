<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Settings\Checkout;

use Mozu\Api\Clients\Commerce\Settings\Checkout\PaymentSettingsClient;
use Mozu\Api\ApiContext;


/**
* Use the Payment Settings resource to specify settings when creating payments for order checkout on the site.
*/
class PaymentSettingsResource {

		private $apiContext;
			
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	



	/**
	* Retrieves the schema and definition along with the actual instance values of the third-party payment service workflow configured for the corresponding fully qualified name.
	*
	* @param string $fullyQualifiedName Fully qualified name of the attribute for the third-party payment workflow.
	* @param string $responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	* @return ExternalPaymentWorkflowDefinition 
	* @deprecated deprecated since version 1.17
	*/
	public function getThirdPartyPaymentWorkflowWithValues($fullyQualifiedName, $responseFields =  null)
	{
		$mozuClient = PaymentSettingsClient::getThirdPartyPaymentWorkflowWithValuesClient($fullyQualifiedName, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* Retrieves the schema and definition along with the actual instance values of the third-party payment service workflow configured for the corresponding fully qualified name.
	*
	* @param string $fullyQualifiedName Fully qualified name of the attribute for the third-party payment workflow.
	* @param string $responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getThirdPartyPaymentWorkflowWithValuesAsync($fullyQualifiedName, $responseFields =  null)
	{
		$mozuClient = PaymentSettingsClient::getThirdPartyPaymentWorkflowWithValuesClient($fullyQualifiedName, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* Retrieves the schema and definition of all third-party payment service workflows configured for the site.
	*
	* @return array|ExternalPaymentWorkflowDefinition 
	* @deprecated deprecated since version 1.17
	*/
	public function getThirdPartyPaymentWorkflows()
	{
		$mozuClient = PaymentSettingsClient::getThirdPartyPaymentWorkflowsClient();
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* Retrieves the schema and definition of all third-party payment service workflows configured for the site.
	*
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getThirdPartyPaymentWorkflowsAsync()
	{
		$mozuClient = PaymentSettingsClient::getThirdPartyPaymentWorkflowsClient();
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* Adds a third-party payment workflow to the site. A third-party payment workflow is a definition of a process by which a third-party payment provider (such as Amazon Payments or PayPal Express) interacts with the Mozu platform.
	*
	* @param ExternalPaymentWorkflowDefinition $definition Properties of an external payment processing workflow defined for the site. At this time, only PayPal Express is supported.
	* @deprecated deprecated since version 1.17
	*/
	public function addThirdPartyPaymentWorkflow($definition)
	{
		$mozuClient = PaymentSettingsClient::addThirdPartyPaymentWorkflowClient($definition);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();

	}
	
/**
	* Adds a third-party payment workflow to the site. A third-party payment workflow is a definition of a process by which a third-party payment provider (such as Amazon Payments or PayPal Express) interacts with the Mozu platform.
	*
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function addThirdPartyPaymentWorkflowAsync($definition)
	{
		$mozuClient = PaymentSettingsClient::addThirdPartyPaymentWorkflowClient($definition);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* Deletes a third-party payment workflow. A third-party payment workflow is a definition of a process by which a third-party payment provider (such as Amazon Payments or PayPal Express) interacts with the Mozu platform. 
	*
	* @param string $fullyQualifiedName Fully qualified name of the attribute for the third-party payment workflow.
	* @deprecated deprecated since version 1.17
	*/
	public function deleteThirdPartyPaymentWorkflow($fullyQualifiedName)
	{
		$mozuClient = PaymentSettingsClient::deleteThirdPartyPaymentWorkflowClient($fullyQualifiedName);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();

	}
	
/**
	* Deletes a third-party payment workflow. A third-party payment workflow is a definition of a process by which a third-party payment provider (such as Amazon Payments or PayPal Express) interacts with the Mozu platform. 
	*
	* @param string $fullyQualifiedName Fully qualified name of the attribute for the third-party payment workflow.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deleteThirdPartyPaymentWorkflowAsync($fullyQualifiedName)
	{
		$mozuClient = PaymentSettingsClient::deleteThirdPartyPaymentWorkflowClient($fullyQualifiedName);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

