<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce\Orders;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\Orders\ExtendedPropertyUrl;

/**
* commerce/orders/extendedproperties related resources. DOCUMENT_HERE 
*/
class ExtendedPropertyClient {

	/**
	* orders-extendedproperties Get GetExtendedProperties description DOCUMENT_HERE 
	*
	* @param bool $draft If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.
	* @param string $orderId Unique identifier of the order.
	* @return MozuClient
	*/
	public static function getExtendedPropertiesClient($orderId, $draft =  null)
	{
		$url = ExtendedPropertyUrl::getExtendedPropertiesUrl($draft, $orderId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* orders-extendedproperties Post AddExtendedProperties description DOCUMENT_HERE 
	*
	* @param string $orderId Unique identifier of the order.
	* @param string $updateMode Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."
	* @param string $version Determines whether or not to check versioning of items for concurrency purposes.
	* @param array|ExtendedProperty $extendedProperties Mozu.CommerceRuntime.Contracts.Commerce.ExtendedProperty ApiType DOCUMENT_HERE 
	* @return MozuClient
	*/
	public static function addExtendedPropertiesClient($extendedProperties, $orderId, $updateMode =  null, $version =  null)
	{
		$url = ExtendedPropertyUrl::addExtendedPropertiesUrl($orderId, $updateMode, $version);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($extendedProperties);
		return $mozuClient;

	}
	
	/**
	* orders-extendedproperties Put UpdateExtendedProperty description DOCUMENT_HERE 
	*
	* @param string $key 
	* @param string $orderId Unique identifier of the order.
	* @param string $responseFields A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.
	* @param string $updateMode Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."
	* @param bool $upsert 
	* @param string $version Determines whether or not to check versioning of items for concurrency purposes.
	* @param ExtendedProperty $extendedProperty Mozu.CommerceRuntime.Contracts.Commerce.ExtendedProperty ApiType DOCUMENT_HERE 
	* @return MozuClient
	*/
	public static function updateExtendedPropertyClient($extendedProperty, $orderId, $key, $updateMode =  null, $version =  null, $upsert =  null, $responseFields =  null)
	{
		$url = ExtendedPropertyUrl::updateExtendedPropertyUrl($key, $orderId, $responseFields, $updateMode, $upsert, $version);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($extendedProperty);
		return $mozuClient;

	}
	
	/**
	* orders-extendedproperties Put UpdateExtendedProperties description DOCUMENT_HERE 
	*
	* @param string $orderId Unique identifier of the order.
	* @param string $updateMode Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."
	* @param bool $upsert 
	* @param string $version Determines whether or not to check versioning of items for concurrency purposes.
	* @param array|ExtendedProperty $extendedProperties Mozu.CommerceRuntime.Contracts.Commerce.ExtendedProperty ApiType DOCUMENT_HERE 
	* @return MozuClient
	*/
	public static function updateExtendedPropertiesClient($extendedProperties, $orderId, $updateMode =  null, $version =  null, $upsert =  null)
	{
		$url = ExtendedPropertyUrl::updateExtendedPropertiesUrl($orderId, $updateMode, $upsert, $version);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($extendedProperties);
		return $mozuClient;

	}
	
	/**
	* orders-extendedproperties Delete DeleteExtendedProperty description DOCUMENT_HERE 
	*
	* @param string $key 
	* @param string $orderId Unique identifier of the order.
	* @param string $updateMode Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."
	* @param string $version Determines whether or not to check versioning of items for concurrency purposes.
	*/
	public static function deleteExtendedPropertyClient($orderId, $key, $updateMode =  null, $version =  null)
	{
		$url = ExtendedPropertyUrl::deleteExtendedPropertyUrl($key, $orderId, $updateMode, $version);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* orders-extendedproperties Delete DeleteExtendedProperties description DOCUMENT_HERE 
	*
	* @param string $orderId Unique identifier of the order.
	* @param string $updateMode Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."
	* @param string $version Determines whether or not to check versioning of items for concurrency purposes.
	* @param array|string $keys 
	*/
	public static function deleteExtendedPropertiesClient($keys, $orderId, $updateMode =  null, $version =  null)
	{
		$url = ExtendedPropertyUrl::deleteExtendedPropertiesUrl($orderId, $updateMode, $version);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($keys);
		return $mozuClient;

	}
	
	
}

?>

