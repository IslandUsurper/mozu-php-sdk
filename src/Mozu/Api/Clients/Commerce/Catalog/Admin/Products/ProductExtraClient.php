<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce\Catalog\Admin\Products;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\Catalog\Admin\Products\ProductExtraUrl;

/**
* Use the Extras resource to configure an extra product attribute for products associated with the product type that uses the extra attribute.
*/
class ProductExtraClient {

	/**
	* Retrieves a list of extras configured for the product according to any defined filter and sort criteria.
	*
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @return MozuClient
	*/
	public static function getExtrasClient($productCode)
	{
		$url = ProductExtraUrl::getExtrasUrl($productCode);
		$verb = "GET";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* Retrieves the details of an extra attribute configuration for the product specified in the request.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @return MozuClient
	*/
	public static function getExtraClient($attributeFQN, $productCode)
	{
		$url = ProductExtraUrl::getExtraUrl($attributeFQN, $productCode);
		$verb = "GET";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* Configure an extra attribute for the product specified in the request.
	*
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param ProductExtra $productExtra Properties of the product extra to configure for the specified product.
	* @return MozuClient
	*/
	public static function addExtraClient($productCode, $productExtra)
	{
		$url = ProductExtraUrl::addExtraUrl($productCode);
		$verb = "POST";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url)->withBody($productExtra);
		return $mozuClient;

	}
	
	/**
	* Updates the configuration of an extra attribute for the product specified in the request.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param ProductExtra $productExtra Properties of the extra attribute to update for the specified product.
	* @return MozuClient
	*/
	public static function updateExtraClient($attributeFQN, $productCode, $productExtra)
	{
		$url = ProductExtraUrl::updateExtraUrl($attributeFQN, $productCode);
		$verb = "PUT";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url)->withBody($productExtra);
		return $mozuClient;

	}
	
	/**
	* Delete a product extra configuration for the product specified in the request.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	*/
	public static function deleteExtraClient($attributeFQN, $productCode)
	{
		$url = ProductExtraUrl::deleteExtraUrl($attributeFQN, $productCode);
		$verb = "DELETE";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url);
		return $mozuClient;

	}
	
	
}

?>

