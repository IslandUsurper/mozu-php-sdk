<?php

/*
* <auto-generated>
*     This code was generated by a Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Urls\Commerce\Catalog\Admin;

use Mozu\Api\MozuUrl;
use Mozu\Api\UrlLocation;

class ProductReservationUrl  {

	/**
		* Get Resource Url for GetProductReservations
		* @param string $filter A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"
		* @param int $pageSize The number of results to display on each page when creating paged results from a query. The maximum value is 200.
		* @param string $sortBy 
		* @param int $startIndex 
		* @return string Resource Url
	*/
	public static function getProductReservationsUrl($filter, $pageSize, $sortBy, $startIndex)
	{
		$url = "/api/commerce/catalog/admin/productreservations/?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("filter", $filter);
		$url = $mozuUrl->formatUrl("pageSize", $pageSize);
		$url = $mozuUrl->formatUrl("sortBy", $sortBy);
		$url = $mozuUrl->formatUrl("startIndex", $startIndex);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for GetProductReservation
		* @param int $productReservationId Unique identifier of the product reservation.
		* @return string Resource Url
	*/
	public static function getProductReservationUrl($productReservationId)
	{
		$url = "/api/commerce/catalog/admin/productreservations/{productReservationId}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("productReservationId", $productReservationId);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for AddProductReservations
		* @param bool $skipInventoryCheck 
		* @return string Resource Url
	*/
	public static function addProductReservationsUrl($skipInventoryCheck)
	{
		$url = "/api/commerce/catalog/admin/productreservations/?skipInventoryCheck={skipInventoryCheck}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		$url = $mozuUrl->formatUrl("skipInventoryCheck", $skipInventoryCheck);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for CommitReservations
		* @return string Resource Url
	*/
	public static function commitReservationsUrl()
	{
		$url = "/api/commerce/catalog/admin/productreservations/commit";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for UpdateProductReservations
		* @param bool $skipInventoryCheck 
		* @return string Resource Url
	*/
	public static function updateProductReservationsUrl($skipInventoryCheck)
	{
		$url = "/api/commerce/catalog/admin/productreservations/?skipInventoryCheck={skipInventoryCheck}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"PUT", false) ;
		$url = $mozuUrl->formatUrl("skipInventoryCheck", $skipInventoryCheck);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for DeleteProductReservation
		* @param int $productReservationId Unique identifier of the reservation.
		* @return string Resource Url
	*/
	public static function deleteProductReservationUrl($productReservationId)
	{
		$url = "/api/commerce/catalog/admin/productreservations/{productReservationId}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"DELETE", false) ;
		$url = $mozuUrl->formatUrl("productReservationId", $productReservationId);
		return $mozuUrl;
	}
	
}

?>

