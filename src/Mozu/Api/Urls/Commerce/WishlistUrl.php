<?php

/*
* <auto-generated>
*     This code was generated by a Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Urls\Commerce;

use Mozu\Api\MozuUrl;
use Mozu\Api\UrlLocation;

class WishlistUrl  {

	/**
		* Get Resource Url for GetWishlists
		* @param string $filter A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"
		* @param int $pageSize The number of results to display on each page when creating paged results from a query. The maximum value is 200.
		* @param string $q A list of search terms to use in the query when searching across wish list name. Separate multiple search terms with a space character.
		* @param int $qLimit The maximum number of search results to return in the response. You can limit any range between 1-100.
		* @param string $sortBy The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"
		* @param int $startIndex When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
		* @return string Resource Url
	*/
	public static function getWishlistsUrl($filter, $pageSize, $q, $qLimit, $sortBy, $startIndex)
	{
		$url = "/api/commerce/wishlists/?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}&q={q}&qLimit={qLimit}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("filter", $filter);
		$url = $mozuUrl->formatUrl("pageSize", $pageSize);
		$url = $mozuUrl->formatUrl("q", $q);
		$url = $mozuUrl->formatUrl("qLimit", $qLimit);
		$url = $mozuUrl->formatUrl("sortBy", $sortBy);
		$url = $mozuUrl->formatUrl("startIndex", $startIndex);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for GetWishlist
		* @param string $wishlistId Unique identifier of the shopper wish list to retrieve.
		* @return string Resource Url
	*/
	public static function getWishlistUrl($wishlistId)
	{
		$url = "/api/commerce/wishlists/{wishlistId}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("wishlistId", $wishlistId);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for GetWishlistByName
		* @param int $customerAccountId 
		* @param string $wishlistName 
		* @return string Resource Url
	*/
	public static function getWishlistByNameUrl($customerAccountId, $wishlistName)
	{
		$url = "/api/commerce/wishlists/customers/{customerAccountId}/{wishlistName}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("customerAccountId", $customerAccountId);
		$url = $mozuUrl->formatUrl("wishlistName", $wishlistName);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for CreateWishlist
		* @return string Resource Url
	*/
	public static function createWishlistUrl()
	{
		$url = "/api/commerce/wishlists/";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for UpdateWishlist
		* @param string $wishlistId Unique identifier of the shopper wish list to update.
		* @return string Resource Url
	*/
	public static function updateWishlistUrl($wishlistId)
	{
		$url = "/api/commerce/wishlists/{wishlistId}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"PUT", false) ;
		$url = $mozuUrl->formatUrl("wishlistId", $wishlistId);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for DeleteWishlist
		* @param string $wishlistId Unique identifier of the wish list to delete.
		* @return string Resource Url
	*/
	public static function deleteWishlistUrl($wishlistId)
	{
		$url = "/api/commerce/wishlists/{wishlistId}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"DELETE", false) ;
		$url = $mozuUrl->formatUrl("wishlistId", $wishlistId);
		return $mozuUrl;
	}
	
}

?>

