<?php

/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Contracts\ProductRuntime;



/**
*	The value selected for a facet when indexing a product search.
*/
class FacetValue
{
	/**
	*The number of facet value selections in a product search result set.
	*/
	public $Count;
	public function getCount() {
		return $this->Count;
	}
	
	public function setCount($count) {
		$this->Count = $count;
		return $this;
	}

	/**
	*Submits the selected facet value as a facet value filter.
	*/
	public $FilterValue;
	public function getFilterValue() {
		return $this->FilterValue;
	}
	
	public function setFilterValue($filterValue) {
		$this->FilterValue = $filterValue;
		return $this;
	}

	/**
	*If true, the facet value is applied as a filter in the storefront product search.
	*/
	public $IsApplied;
	public function getIsApplied() {
		return $this->IsApplied;
	}
	
	public function setIsApplied($isApplied) {
		$this->IsApplied = $isApplied;
		return $this;
	}

	/**
	*The descriptive label of the facet value.
	*/
	public $Label;
	public function getLabel() {
		return $this->Label;
	}
	
	public function setLabel($label) {
		$this->Label = $label;
		return $this;
	}

	/**
	*If applicable, the values of any parent category facets in a hierarchy. Hierarchical facets only apply for product categories.
	*/
	public $ParentFacetValue;
	public function getParentFacetValue() {
		return $this->ParentFacetValue;
	}
	
	public function setParentFacetValue($parentFacetValue) {
		$this->ParentFacetValue = $parentFacetValue;
		return $this;
	}

	/**
	*The maximum value selected or entered for the facet range query.
	*/
	public $RangeQueryValueEnd;
	public function getRangeQueryValueEnd() {
		return $this->RangeQueryValueEnd;
	}
	
	public function setRangeQueryValueEnd($rangeQueryValueEnd) {
		$this->RangeQueryValueEnd = $rangeQueryValueEnd;
		return $this;
	}

	/**
	*The minimum value selected or entered for the facet range query.
	*/
	public $RangeQueryValueStart;
	public function getRangeQueryValueStart() {
		return $this->RangeQueryValueStart;
	}
	
	public function setRangeQueryValueStart($rangeQueryValueStart) {
		$this->RangeQueryValueStart = $rangeQueryValueStart;
		return $this;
	}

	/**
	*String representation of the facet value selected for the product search.
	*/
	public $Value;
	public function getValue() {
		return $this->Value;
	}
	
	public function setValue($value) {
		$this->Value = $value;
		return $this;
	}

	/**
	*If applicable, the values of any subcategory facets in a hierarchy. Hierarchical facets only apply for product categories.
	*/
	public $ChildrenFacetValues;
	public function getChildrenFacetValues() {
		return $this->ChildrenFacetValues;
	}
	
	public function setChildrenFacetValues($childrenFacetValues) {
		$this->ChildrenFacetValues = $childrenFacetValues;
		return $this;
	}

}

?>
