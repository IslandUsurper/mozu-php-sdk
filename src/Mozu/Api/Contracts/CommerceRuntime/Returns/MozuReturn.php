<?php

/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Contracts\CommerceRuntime\Returns;



/**
*	Properties of a return of one or more items shipped with a previously completed order.
*/
class MozuReturn
{
	/**
	*The actions a user can perform for the return at this time.
	*/
	public $AvailableActions;
	public function getAvailableActions() {
		return $this->AvailableActions;
	}
	
	public function setAvailableActions($availableActions) {
		$this->AvailableActions = $availableActions;
		return $this;
	}

	/**
	*Unique identifier of the return.
	*/
	public $Id;
	public function getId() {
		return $this->Id;
	}
	
	public function setId($id) {
		$this->Id = $id;
		return $this;
	}

		public $LossTotal;
	public function getLossTotal() {
		return $this->LossTotal;
	}
	
	public function setLossTotal($lossTotal) {
		$this->LossTotal = $lossTotal;
		return $this;
	}

	/**
	*Unique identifier of the original completed order associated with this return.
	*/
	public $OriginalOrderId;
	public function getOriginalOrderId() {
		return $this->OriginalOrderId;
	}
	
	public function setOriginalOrderId($originalOrderId) {
		$this->OriginalOrderId = $originalOrderId;
		return $this;
	}

		public $ProductLossTaxTotal;
	public function getProductLossTaxTotal() {
		return $this->ProductLossTaxTotal;
	}
	
	public function setProductLossTaxTotal($productLossTaxTotal) {
		$this->ProductLossTaxTotal = $productLossTaxTotal;
		return $this;
	}

		public $ProductLossTotal;
	public function getProductLossTotal() {
		return $this->ProductLossTotal;
	}
	
	public function setProductLossTotal($productLossTotal) {
		$this->ProductLossTotal = $productLossTotal;
		return $this;
	}

	/**
	*If a refund action was performed for this return, the total amount refunded to the shopper. The refund amount can differ from the sum of the price of the returned items.
	*/
	public $RefundAmount;
	public function getRefundAmount() {
		return $this->RefundAmount;
	}
	
	public function setRefundAmount($refundAmount) {
		$this->RefundAmount = $refundAmount;
		return $this;
	}

	/**
	*A merchant-specific identifier used to sequentially order returns.
	*/
	public $ReturnNumber;
	public function getReturnNumber() {
		return $this->ReturnNumber;
	}
	
	public function setReturnNumber($returnNumber) {
		$this->ReturnNumber = $returnNumber;
		return $this;
	}

	/**
	*Unique identifier for the order created as a result of the return. If the return results in shipping a replacement item, the order includes shipment information for the replaced items. If the return results in a refund, the order includes payment transactions to credit the shopper.
	*/
	public $ReturnOrderId;
	public function getReturnOrderId() {
		return $this->ReturnOrderId;
	}
	
	public function setReturnOrderId($returnOrderId) {
		$this->ReturnOrderId = $returnOrderId;
		return $this;
	}

	/**
	*The type of return, which is "Refund" or "Replace".
	*/
	public $ReturnType;
	public function getReturnType() {
		return $this->ReturnType;
	}
	
	public function setReturnType($returnType) {
		$this->ReturnType = $returnType;
		return $this;
	}

	/**
	*The date by which a shopper must ship items associated with a return in an "awaiting items" state to the merchant.
	*/
	public $RMADeadline;
	public function getRMADeadline() {
		return $this->RMADeadline;
	}
	
	public function setRMADeadline($rMADeadline) {
		$this->RMADeadline = $rMADeadline;
		return $this;
	}

		public $ShippingLossTaxTotal;
	public function getShippingLossTaxTotal() {
		return $this->ShippingLossTaxTotal;
	}
	
	public function setShippingLossTaxTotal($shippingLossTaxTotal) {
		$this->ShippingLossTaxTotal = $shippingLossTaxTotal;
		return $this;
	}

		public $ShippingLossTotal;
	public function getShippingLossTotal() {
		return $this->ShippingLossTotal;
	}
	
	public function setShippingLossTotal($shippingLossTotal) {
		$this->ShippingLossTotal = $shippingLossTotal;
		return $this;
	}

		public $SiteGroupId;
	public function getSiteGroupId() {
		return $this->SiteGroupId;
	}
	
	public function setSiteGroupId($siteGroupId) {
		$this->SiteGroupId = $siteGroupId;
		return $this;
	}

		public $SiteId;
	public function getSiteId() {
		return $this->SiteId;
	}
	
	public function setSiteId($siteId) {
		$this->SiteId = $siteId;
		return $this;
	}

	/**
	*Current status of the return, such as "ReturnAuthorized".
	*/
	public $Status;
	public function getStatus() {
		return $this->Status;
	}
	
	public function setStatus($status) {
		$this->Status = $status;
		return $this;
	}

		public $TenantId;
	public function getTenantId() {
		return $this->TenantId;
	}
	
	public function setTenantId($tenantId) {
		$this->TenantId = $tenantId;
		return $this;
	}

	/**
	*Unique identifier of the user responsible for the return. Read only and supplied by the original order.
	*/
	public $UserId;
	public function getUserId() {
		return $this->UserId;
	}
	
	public function setUserId($userId) {
		$this->UserId = $userId;
		return $this;
	}

	/**
	*Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
	*/
	public $AuditInfo;
	public function getAuditInfo() {
		return $this->AuditInfo;
	}
	
	public function setAuditInfo($auditInfo) {
		$this->AuditInfo = $auditInfo;
		return $this;
	}

	/**
	*An array list of objects in the returned collection.
	*/
	public $Items;
	public function getItems() {
		return $this->Items;
	}
	
	public function setItems($items) {
		$this->Items = $items;
		return $this;
	}

	/**
	*Collection of merchant-supplied notes entered for the return.
	*/
	public $Notes;
	public function getNotes() {
		return $this->Notes;
	}
	
	public function setNotes($notes) {
		$this->Notes = $notes;
		return $this;
	}

	/**
	*List of packages associated with a replacement order for a return.
	*/
	public $Packages;
	public function getPackages() {
		return $this->Packages;
	}
	
	public function setPackages($packages) {
		$this->Packages = $packages;
		return $this;
	}

	/**
	*Array of payments associated with this return, if applicable.
	*/
	public $Payments;
	public function getPayments() {
		return $this->Payments;
	}
	
	public function setPayments($payments) {
		$this->Payments = $payments;
		return $this;
	}

}

?>
