<?php

/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Contracts\CommerceRuntime\Shipping;



/**
*	Properties of a shipment for an order.
*/
class Shipment
{
	/**
	*The total merchant cost of the order shipment for accounting purposes.
	*/
	public $Cost;
	public function getCost() {
		return $this->Cost;
	}
	
	public function setCost($cost) {
		$this->Cost = $cost;
		return $this;
	}

	/**
	*Unique identifier of the order shipment.
	*/
	public $Id;
	public function getId() {
		return $this->Id;
	}
	
	public function setId($id) {
		$this->Id = $id;
		return $this;
	}

		public $ISOCurrencyCode;
	public function getISOCurrencyCode() {
		return $this->ISOCurrencyCode;
	}
	
	public function setISOCurrencyCode($iSOCurrencyCode) {
		$this->ISOCurrencyCode = $iSOCurrencyCode;
		return $this;
	}

	/**
	*List of unique identifiers of packages associated with this shipment.
	*/
	public $PackageIds;
	public function getPackageIds() {
		return $this->PackageIds;
	}
	
	public function setPackageIds($packageIds) {
		$this->PackageIds = $packageIds;
		return $this;
	}

	/**
	*Code for the shipping carrier service type used to ship the order shipment.
	*/
	public $ShippingMethodCode;
	public function getShippingMethodCode() {
		return $this->ShippingMethodCode;
	}
	
	public function setShippingMethodCode($shippingMethodCode) {
		$this->ShippingMethodCode = $shippingMethodCode;
		return $this;
	}

	/**
	*If true, a shopper signature is required to deliver the order shipment.
	*/
	public $SignatureRequired;
	public function getSignatureRequired() {
		return $this->SignatureRequired;
	}
	
	public function setSignatureRequired($signatureRequired) {
		$this->SignatureRequired = $signatureRequired;
		return $this;
	}

	/**
	*Tracking number the shipping carrier supplied for the order shipment.
	*/
	public $TrackingNumber;
	public function getTrackingNumber() {
		return $this->TrackingNumber;
	}
	
	public function setTrackingNumber($trackingNumber) {
		$this->TrackingNumber = $trackingNumber;
		return $this;
	}

		public $AuditInfo;
	public function getAuditInfo() {
		return $this->AuditInfo;
	}
	
	public function setAuditInfo($auditInfo) {
		$this->AuditInfo = $auditInfo;
		return $this;
	}

		public $DestinationAddress;
	public function getDestinationAddress() {
		return $this->DestinationAddress;
	}
	
	public function setDestinationAddress($destinationAddress) {
		$this->DestinationAddress = $destinationAddress;
		return $this;
	}

	/**
	*The physical address from which the order shipment will be sent.
	*/
	public $OriginAddress;
	public function getOriginAddress() {
		return $this->OriginAddress;
	}
	
	public function setOriginAddress($originAddress) {
		$this->OriginAddress = $originAddress;
		return $this;
	}

}

?>
