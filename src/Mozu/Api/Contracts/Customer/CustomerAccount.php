<?php

/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Contracts\Customer;



/**
*	Properties of the customer account.
*/
class CustomerAccount
{
	/**
	*If true, the customer prefers to receive marketing material such as newsletters or email offers.
	*/
	public $AcceptsMarketing;
	public function getAcceptsMarketing() {
		return $this->AcceptsMarketing;
	}
	
	public function setAcceptsMarketing($acceptsMarketing) {
		$this->AcceptsMarketing = $acceptsMarketing;
		return $this;
	}

	/**
	*The legal or doing business as (DBA) or tradestyle name of the business or organization. The maximum character length is 200.
	*/
	public $CompanyOrOrganization;
	public function getCompanyOrOrganization() {
		return $this->CompanyOrOrganization;
	}
	
	public function setCompanyOrOrganization($companyOrOrganization) {
		$this->CompanyOrOrganization = $companyOrOrganization;
		return $this;
	}

	/**
	*Identifier of the entity.
	*/
	public $Id;
	public function getId() {
		return $this->Id;
	}
	
	public function setId($id) {
		$this->Id = $id;
		return $this;
	}

	/**
	*Unique identifier of the site.
	*/
	public $SiteId;
	public function getSiteId() {
		return $this->SiteId;
	}
	
	public function setSiteId($siteId) {
		$this->SiteId = $siteId;
		return $this;
	}

	/**
	*If true, this customer account has tax exempt status.
	*/
	public $TaxExempt;
	public function getTaxExempt() {
		return $this->TaxExempt;
	}
	
	public function setTaxExempt($taxExempt) {
		$this->TaxExempt = $taxExempt;
		return $this;
	}

	/**
	*The tax identification number associated with the customer account.
	*/
	public $TaxId;
	public function getTaxId() {
		return $this->TaxId;
	}
	
	public function setTaxId($taxId) {
		$this->TaxId = $taxId;
		return $this;
	}

	/**
	*Unique identifier of the user associated with the customer account.
	*/
	public $UserId;
	public function getUserId() {
		return $this->UserId;
	}
	
	public function setUserId($userId) {
		$this->UserId = $userId;
		return $this;
	}

	/**
	*Collection of customer account attributes.
	*/
	public $Attributes;
	public function getAttributes() {
		return $this->Attributes;
	}
	
	public function setAttributes($attributes) {
		$this->Attributes = $attributes;
		return $this;
	}

	/**
	*Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
	*/
	public $AuditInfo;
	public function getAuditInfo() {
		return $this->AuditInfo;
	}
	
	public function setAuditInfo($auditInfo) {
		$this->AuditInfo = $auditInfo;
		return $this;
	}

	/**
	*Contact information, including the contact's name, address, phone numbers, email addresses, and company (if supplied). Also indicates whether this is a billing, shipping, or billing and shipping contact.
	*/
	public $Contacts;
	public function getContacts() {
		return $this->Contacts;
	}
	
	public function setContacts($contacts) {
		$this->Contacts = $contacts;
		return $this;
	}

	/**
	*List of groups associated with this customer account.
	*/
	public $Groups;
	public function getGroups() {
		return $this->Groups;
	}
	
	public function setGroups($groups) {
		$this->Groups = $groups;
		return $this;
	}

	/**
	*List of customer account notes.
	*/
	public $Notes;
	public function getNotes() {
		return $this->Notes;
	}
	
	public function setNotes($notes) {
		$this->Notes = $notes;
		return $this;
	}

	/**
	*The order summary includes the date of the most recent order, a list of the number of orders made, and the total monetary sum of all orders including cancellations and refunds associated with the customer account.
	*/
	public $OrderSummary;
	public function getOrderSummary() {
		return $this->OrderSummary;
	}
	
	public function setOrderSummary($orderSummary) {
		$this->OrderSummary = $orderSummary;
		return $this;
	}

}

?>
