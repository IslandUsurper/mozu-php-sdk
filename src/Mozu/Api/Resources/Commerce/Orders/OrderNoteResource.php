<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Orders;

use Mozu\Api\MozuClient;
use Mozu\Api\Clients\Commerce\Orders\OrderNoteClient;
use Mozu\Api\Resources\BaseResource;
use Mozu\Api\ApiContext;

/**
* Use this subresource to manage notes associated with an active order.
*/
class OrderNoteResource extends BaseResource {

	private $apiContext;
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	/**
	* Retrieves a list of all notes for an order.
	*
	* @param string $orderId Unique identifier of the order whose notes are retrieved.
	* @return array|OrderNote 
	*/
	public function getOrderNotes($orderId)
	{
		$mozuClient = OrderNoteClient::getOrderNotesClient($orderId);
		$mozuClient = parent::SetContext($this->apiContext, $mozuClient,TRUE);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Retrieves a specific order note from an order.
	*
	* @param string $noteId Unique identifier of the note text to retrieve.
	* @param string $orderId Unique identifier of the order note to retrieve.
	* @return OrderNote 
	*/
	public function getOrderNote($noteId, $orderId)
	{
		$mozuClient = OrderNoteClient::getOrderNoteClient($noteId, $orderId);
		$mozuClient = parent::SetContext($this->apiContext, $mozuClient,TRUE);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Adds a note to the order. This is an internal note that the merchant can add to an order.
	*
	* @param string $orderId Unique identifier of the order to add a note.
	* @param OrderNote $orderNote The Unicode alphanumeric text contained in the note. Max length: 256 characters.
	* @return OrderNote 
	*/
	public function createOrderNote($orderId, $orderNote)
	{
		$mozuClient = OrderNoteClient::createOrderNoteClient($orderId, $orderNote);
		$mozuClient = parent::SetContext($this->apiContext, $mozuClient,TRUE);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Updates a specific order note for an order.
	*
	* @param string $noteId Unique identifier of the note whose text is being updated.
	* @param string $orderId Unique identifier of the order whose note is being updated.
	* @param OrderNote $orderNote The Unicode alphanumeric text contained in the note.
	* @return OrderNote 
	*/
	public function updateOrderNote($noteId, $orderId, $orderNote)
	{
		$mozuClient = OrderNoteClient::updateOrderNoteClient($noteId, $orderId, $orderNote);
		$mozuClient = parent::SetContext($this->apiContext, $mozuClient,TRUE);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Deletes a specific order note on an order.
	*
	* @param string $noteId Unique identifier of the note text to delete.
	* @param string $orderId Unique identifier of the order note to delete.
	*/
	public function deleteOrderNote($noteId, $orderId)
	{
		$mozuClient = OrderNoteClient::deleteOrderNoteClient($noteId, $orderId);
		$mozuClient = parent::SetContext($this->apiContext, $mozuClient,TRUE);
		$mozuClient->execute();

	}
	
	
}

?>

