<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Settings\Checkout;

use Mozu\Api\Clients\Commerce\Settings\Checkout\PaymentSettingsClient;
use Mozu\Api\ApiContext;


/**
* Use the Payment Settings resource to specify settings when creating payments for order checkout on the site.
*/
class PaymentSettingsResource {

		private $apiContext;
			
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	



	/**
	* Retrieves the details of the third-party payment service workflows configured for the site.
	*
	* @return array|ExternalPaymentWorkflowDefinition 
	* @deprecated deprecated since version 1.17
	*/
	public function getThirdPartyPaymentWorkflows()
	{
		$mozuClient = PaymentSettingsClient::getThirdPartyPaymentWorkflowsClient();
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* Retrieves the details of the third-party payment service workflows configured for the site.
	*
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getThirdPartyPaymentWorkflowsAsync()
	{
		$mozuClient = PaymentSettingsClient::getThirdPartyPaymentWorkflowsClient();
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

