<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Catalog\Admin\Products;

use Mozu\Api\MozuClient;
use Mozu\Api\Clients\Commerce\Catalog\Admin\Products\ProductPropertyClient;
use Mozu\Api\Resources\BaseResource;
use Mozu\Api\ApiContext;

/**
* Query, create, and update product properties.
*/
class ProductPropertyResource extends BaseResource {

	private $apiContext;
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	/**
	* Retrieves a list of product properties by providing the product code.
	*
	* @param string $productCode Identifies the product for which a list of properties is being retrieved.
	* @return array|ProductProperty 
	*/
	public function getProperties($productCode)
	{
		$mozuClient = ProductPropertyClient::getPropertiesClient($productCode);
		$mozuClient = parent::SetContext($this->apiContext, $mozuClient,TRUE);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Retrieves the individual product property by providing the product code and the attribute's fully qualified name.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param string $productCode Identifies the product for which a single property is being retrieved.
	* @return ProductProperty 
	*/
	public function getProperty($attributeFQN, $productCode)
	{
		$mozuClient = ProductPropertyClient::getPropertyClient($attributeFQN, $productCode);
		$mozuClient = parent::SetContext($this->apiContext, $mozuClient,TRUE);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Adds or creates an individual property by providing the product code.
	*
	* @param string $productCode The merchant-created code that uniquely identifies the product such as a SKU or item number. Identifies the product for which a new property is created.
	* @param ProductProperty $productProperty The details of the product property including the attribute detail, user's fully qualified name, and the list of product property values to add.
	* @return ProductProperty 
	*/
	public function addProperty($productCode, $productProperty)
	{
		$mozuClient = ProductPropertyClient::addPropertyClient($productCode, $productProperty);
		$mozuClient = parent::SetContext($this->apiContext, $mozuClient,TRUE);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Update the details of a product property by providng the product code and the attribute's fully qualified name.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param string $productCode Identifies the product for which a list of properties is being updated.
	* @param ProductProperty $productProperty The details of the product property including the attribute detail, user's fully qualified name, and the list of product property values to update.
	* @return ProductProperty 
	*/
	public function updateProperty($attributeFQN, $productCode, $productProperty)
	{
		$mozuClient = ProductPropertyClient::updatePropertyClient($attributeFQN, $productCode, $productProperty);
		$mozuClient = parent::SetContext($this->apiContext, $mozuClient,TRUE);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Deletes the property by providing the product code and the attribute's fully qualified name.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param string $productCode Identifies the product for which a new property is being deleted.
	*/
	public function deleteProperty($attributeFQN, $productCode)
	{
		$mozuClient = ProductPropertyClient::deletePropertyClient($attributeFQN, $productCode);
		$mozuClient = parent::SetContext($this->apiContext, $mozuClient,TRUE);
		$mozuClient->execute();

	}
	
	
}

?>

