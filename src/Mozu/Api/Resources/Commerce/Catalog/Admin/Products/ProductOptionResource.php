<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Catalog\Admin\Products;

use Mozu\Api\MozuClient;
use Mozu\Api\Clients\Commerce\Catalog\Admin\Products\ProductOptionClient;
use Mozu\Api\Resources\BaseResource;
use Mozu\Api\ApiContext;

/**
* Query, create, and update product options.
*/
class ProductOptionResource extends BaseResource {

	private $apiContext;
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	/**
	* Retrieves a list of all option attributes configured for the product specified in the request.
	*
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @return array|ProductOption 
	*/
	public function getOptions($productCode)
	{
		$mozuClient = ProductOptionClient::getOptionsClient($productCode);
		$mozuClient = parent::SetContext($this->apiContext, $mozuClient,TRUE);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Retrieves the catalog option by providing the product type ID and the attribute's fully qualified name.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @return ProductOption 
	*/
	public function getOption($attributeFQN, $productCode)
	{
		$mozuClient = ProductOptionClient::getOptionClient($attributeFQN, $productCode);
		$mozuClient = parent::SetContext($this->apiContext, $mozuClient,TRUE);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Adds or creates a product option.
	*
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param ProductOption $productOption The product option being added or created.
	* @return ProductOption 
	*/
	public function addOption($productCode, $productOption)
	{
		$mozuClient = ProductOptionClient::addOptionClient($productCode, $productOption);
		$mozuClient = parent::SetContext($this->apiContext, $mozuClient,TRUE);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Updates a product option by providing the product type ID and the attribute's fully qualified name. There is also a request body to supply additional information.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param ProductOption $productOption The product option being updated.
	* @return ProductOption 
	*/
	public function updateOption($attributeFQN, $productCode, $productOption)
	{
		$mozuClient = ProductOptionClient::updateOptionClient($attributeFQN, $productCode, $productOption);
		$mozuClient = parent::SetContext($this->apiContext, $mozuClient,TRUE);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Deletes the catalog option by providing the product type ID and the attribute's fully qualified name.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	*/
	public function deleteOption($attributeFQN, $productCode)
	{
		$mozuClient = ProductOptionClient::deleteOptionClient($attributeFQN, $productCode);
		$mozuClient = parent::SetContext($this->apiContext, $mozuClient,TRUE);
		$mozuClient->execute();

	}
	
	
}

?>

