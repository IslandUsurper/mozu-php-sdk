<?php


/**
* <auto-generated>
*     This code was generated by a Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Catalog\Admin\Attributedefinition\Producttypes;

use Mozu\Api\MozuClient;
use Mozu\Api\Clients\Commerce\Catalog\Admin\Attributedefinition\Producttypes\ProductTypeExtraClient;
use Mozu\Api\ApiContext;
use Mozu\Api\DataViewMode;
use Mozu\Api\Headers;

/**
* Use the Extras subresource to define how a product attribute classified as an "extra" is used for a specific product type. Product attribute defintions are unique for each associated product type.
*/
class ProductTypeExtraResource {

		private $apiContext;
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	/**
	* Retrieves a list of extra attributes defined for the specified product type.
	*
	* @param int $productTypeId Identifier of the product type.
	* @return array|AttributeInProductType 
	*/
	public function getExtras($dataViewMode, $productTypeId)
	{
		$mozuClient = ProductTypeExtraClient::getExtrasClient($dataViewMode, $productTypeId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Retrieves the details of an extra attribute definition for the specified product type.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param int $productTypeId Identifier of the product type.
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @return AttributeInProductType 
	*/
	public function getExtra($dataViewMode, $productTypeId, $attributeFQN, $responseFields =  null)
	{
		$mozuClient = ProductTypeExtraClient::getExtraClient($dataViewMode, $productTypeId, $attributeFQN, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Assigns a defined extra attribute to the product type based on the information supplied in the request.
	*
	* @param int $productTypeId Identifier of the product type.
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @param AttributeInProductType $attributeInProductType Properties of an attribute definition associated with a specific product type. When an attribute is applied to a product type, each product of that type maintains the same set of attributes.
	* @return AttributeInProductType 
	*/
	public function addExtra($dataViewMode, $attributeInProductType, $productTypeId, $responseFields =  null)
	{
		$mozuClient = ProductTypeExtraClient::addExtraClient($dataViewMode, $attributeInProductType, $productTypeId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Update the definition of an extra attribute for the specified product type.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param int $productTypeId Identifier of the product type.
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @param AttributeInProductType $attributeInProductType Properties of an attribute definition associated with a specific product type. When an attribute is applied to a product type, each product of that type maintains the same set of attributes.
	* @return AttributeInProductType 
	*/
	public function updateExtra($dataViewMode, $attributeInProductType, $productTypeId, $attributeFQN, $responseFields =  null)
	{
		$mozuClient = ProductTypeExtraClient::updateExtraClient($dataViewMode, $attributeInProductType, $productTypeId, $attributeFQN, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Removes an extra attribute definition from the specified product type.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param int $productTypeId Identifier of the product type.
	*/
	public function deleteExtra($dataViewMode, $productTypeId, $attributeFQN)
	{
		$mozuClient = ProductTypeExtraClient::deleteExtraClient($dataViewMode, $productTypeId, $attributeFQN);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();

	}
	
	
}

?>

