<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Content\Documentlists;

use Mozu\Api\Clients\Content\Documentlists\DocumentTreeClient;
use Mozu\Api\ApiContext;

/**
* Use the document tree subresource to retrieve documents and manage content within the document hierarchy.
*/
class DocumentTreeResource {

	private $apiContext;
	private $dataViewMode;
		public function __construct(ApiContext $apiContext, $dataViewMode) 
	{
		$this->apiContext = $apiContext;
		$this->dataViewMode = $dataViewMode;
	}
	



	/**
	* Retrieve the content associated with the document, such as a product image or PDF specifications file.
	*
	* @param string $documentListName Name of content documentListName to delete
	* @param string $documentName The name of the document in the site.
	* @return Stream 
	*/
	public function getTreeDocumentContent($documentListName, $documentName)
	{
		$mozuClient = DocumentTreeClient::getTreeDocumentContentClient($this->dataViewMode, $documentListName, $documentName);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Retrieves a document based on its document list and folder path in the document hierarchy.
	*
	* @param string $documentListName Name of content documentListName to delete
	* @param string $documentName The name of the document in the site.
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @return Document 
	*/
	public function getTreeDocument($documentListName, $documentName, $responseFields =  null)
	{
		$mozuClient = DocumentTreeClient::getTreeDocumentClient($this->dataViewMode, $documentListName, $documentName, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Updates the content associated with a document, such as a product image or PDF specifications file, based on the document's position in the document hierarchy.
	*
	* @param string $documentListName Name of content documentListName to delete
	* @param string $documentName The name of the document in the site.
	* @param Stream $stream Data stream that delivers information. Used to input and output data.
	*/
	public function updateTreeDocumentContent($stream, $documentListName, $documentName, $contentType= null)
	{
		$mozuClient = DocumentTreeClient::updateTreeDocumentContentClient($stream, $documentListName, $documentName, $contentType);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();

	}
	
	/**
	* Deletes the content associated with a document, such as a product image or PDF specifications file.
	*
	* @param string $documentListName Name of content documentListName to delete
	* @param string $documentName The name of the document in the site.
	* @param Stream $stream Data stream that delivers information. Used to input and output data.
	*/
	public function deleteTreeDocumentContent($stream, $documentListName, $documentName, $contentType= null)
	{
		$mozuClient = DocumentTreeClient::deleteTreeDocumentContentClient($stream, $documentListName, $documentName, $contentType);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();

	}
	
	
}

?>

