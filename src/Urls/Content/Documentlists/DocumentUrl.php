<?php

/*
* <auto-generated>
*     This code was generated by a Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Urls\Content\Documentlists;

use Mozu\Api\MozuUrl;
use Mozu\Api\UrlLocation;

class DocumentUrl  {

	/**
		* Get Resource Url for GetDocumentContent
		* @param string $documentId Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.
		* @param string $documentListName Name of content documentListName to delete
		* @return string Resource Url
	*/
	public static function getDocumentContentUrl($documentId, $documentListName)
	{
		$url = "/api/content/documentlists/{documentListName}/documents/{documentId}/content";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("documentId", $documentId);
		$url = $mozuUrl->formatUrl("documentListName", $documentListName);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for TransformDocumentContent
		* @param string $crop Crops the image based on the specified coordinates. The reference point for positive coordinates is the top-left corner of the image, and the reference point for negative coordinates is the bottom-right corner of the image.Usage: Example:  removes 10 pixels from all edges of the image.  leaves the image uncropped.
		* @param string $documentId Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.
		* @param string $documentListName Name of content documentListName to delete
		* @param int $height Specifies an exact height dimension for the image, in pixels.
		* @param int $max Specifies a pixel limitation for the largest side of an image.
		* @param int $maxHeight Specifies a pixel limitation for the height of the image, preserving the aspect ratio if the image needs resizing.
		* @param int $maxWidth Specifies a pixel limitation for the width of the image, preserving the aspect ratio if the image needs resizing.
		* @param int $quality Adjusts the image compression. Accepts values from 0-100, where 100 = highest quality, least compression.
		* @param int $width Specifies an exact width dimension for the image, in pixels.
		* @return string Resource Url
	*/
	public static function transformDocumentContentUrl($crop, $documentId, $documentListName, $height, $max, $maxHeight, $maxWidth, $quality, $width)
	{
		$url = "/api/content/documentlists/{documentListName}/documents/{documentId}/transform?width={width}&height={height}&maxWidth={maxWidth}&maxHeight={maxHeight}&crop={crop}&quality={quality}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("crop", $crop);
		$url = $mozuUrl->formatUrl("documentId", $documentId);
		$url = $mozuUrl->formatUrl("documentListName", $documentListName);
		$url = $mozuUrl->formatUrl("height", $height);
		$url = $mozuUrl->formatUrl("max", $max);
		$url = $mozuUrl->formatUrl("maxHeight", $maxHeight);
		$url = $mozuUrl->formatUrl("maxWidth", $maxWidth);
		$url = $mozuUrl->formatUrl("quality", $quality);
		$url = $mozuUrl->formatUrl("width", $width);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for GetDocument
		* @param string $documentId Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.
		* @param string $documentListName Name of content documentListName to delete
		* @param bool $includeInactive Include inactive content.
		* @param string $responseFields Use this field to include those fields which are not included by default.
		* @return string Resource Url
	*/
	public static function getDocumentUrl($documentId, $documentListName, $includeInactive, $responseFields)
	{
		$url = "/api/content/documentlists/{documentListName}/documents/{documentId}?includeInactive={includeInactive}&responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("documentId", $documentId);
		$url = $mozuUrl->formatUrl("documentListName", $documentListName);
		$url = $mozuUrl->formatUrl("includeInactive", $includeInactive);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for GetDocuments
		* @param string $documentListName Name of content documentListName to delete
		* @param string $filter A set of filter expressions representing the search parameters for a query. This parameter is optional. Refer to [Sorting and Filtering](../../../../Developer/api-guides/sorting-filtering.htm) for a list of supported filters.
		* @param bool $includeInactive Include inactive content.
		* @param int $pageSize The number of results to display on each page when creating paged results from a query. The maximum value is 200.
		* @param string $responseFields Use this field to include those fields which are not included by default.
		* @param string $sortBy The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"
		* @param int $startIndex When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
		* @return string Resource Url
	*/
	public static function getDocumentsUrl($documentListName, $filter, $includeInactive, $pageSize, $responseFields, $sortBy, $startIndex)
	{
		$url = "/api/content/documentlists/{documentListName}/documents?filter={filter}&sortBy={sortBy}&pageSize={pageSize}&startIndex={startIndex}&includeInactive={includeInactive}&responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("documentListName", $documentListName);
		$url = $mozuUrl->formatUrl("filter", $filter);
		$url = $mozuUrl->formatUrl("includeInactive", $includeInactive);
		$url = $mozuUrl->formatUrl("pageSize", $pageSize);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		$url = $mozuUrl->formatUrl("sortBy", $sortBy);
		$url = $mozuUrl->formatUrl("startIndex", $startIndex);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for CreateDocument
		* @param string $documentListName Name of content documentListName to delete
		* @param string $responseFields Use this field to include those fields which are not included by default.
		* @return string Resource Url
	*/
	public static function createDocumentUrl($documentListName, $responseFields)
	{
		$url = "/api/content/documentlists/{documentListName}/documents?responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		$url = $mozuUrl->formatUrl("documentListName", $documentListName);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for UpdateDocumentContent
		* @param string $documentId Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.
		* @param string $documentListName Name of content documentListName to delete
		* @return string Resource Url
	*/
	public static function updateDocumentContentUrl($documentId, $documentListName)
	{
		$url = "/api/content/documentlists/{documentListName}/documents/{documentId}/content";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"PUT", false) ;
		$url = $mozuUrl->formatUrl("documentId", $documentId);
		$url = $mozuUrl->formatUrl("documentListName", $documentListName);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for UpdateDocument
		* @param string $documentId Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.
		* @param string $documentListName Name of content documentListName to delete
		* @param string $responseFields Use this field to include those fields which are not included by default.
		* @return string Resource Url
	*/
	public static function updateDocumentUrl($documentId, $documentListName, $responseFields)
	{
		$url = "/api/content/documentlists/{documentListName}/documents/{documentId}?responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"PUT", false) ;
		$url = $mozuUrl->formatUrl("documentId", $documentId);
		$url = $mozuUrl->formatUrl("documentListName", $documentListName);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for DeleteDocument
		* @param string $documentId Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.
		* @param string $documentListName Name of content documentListName to delete
		* @return string Resource Url
	*/
	public static function deleteDocumentUrl($documentId, $documentListName)
	{
		$url = "/api/content/documentlists/{documentListName}/documents/{documentId}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"DELETE", false) ;
		$url = $mozuUrl->formatUrl("documentId", $documentId);
		$url = $mozuUrl->formatUrl("documentListName", $documentListName);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for DeleteDocumentContent
		* @param string $documentId Unique identifier for a document, used by content and document calls. Document IDs are associated with document types, document type lists, sites, and tenants.
		* @param string $documentListName Name of content documentListName to delete
		* @return string Resource Url
	*/
	public static function deleteDocumentContentUrl($documentId, $documentListName)
	{
		$url = "/api/content/documentlists/{documentListName}/documents/{documentId}/content";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"DELETE", false) ;
		$url = $mozuUrl->formatUrl("documentId", $documentId);
		$url = $mozuUrl->formatUrl("documentListName", $documentListName);
		return $mozuUrl;
	}
	
}

?>

