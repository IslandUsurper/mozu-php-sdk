<?php

/*
* <auto-generated>
*     This code was generated by a Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Urls\Commerce\Catalog\Admin\Couponsets;

use Mozu\Api\MozuUrl;
use Mozu\Api\UrlLocation;

class CouponUrl  {

	/**
		* Get Resource Url for GetCoupon
		* @param string $couponCode Code associated with the coupon to remove from the cart.
		* @param string $couponSetCode The unique identifier of the coupon set that the coupon belongs to.
		* @param bool $includeCounts Specifies whether to return the redemptionCount property in the response body object.
		* @param string $responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
		* @return string Resource Url
	*/
	public static function getCouponUrl($couponCode, $couponSetCode, $includeCounts, $responseFields)
	{
		$url = "/api/commerce/catalog/admin/couponsets/{couponSetCode}/couponcodes/{couponCode}?includeCounts={includeCounts}&responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("couponCode", $couponCode);
		$url = $mozuUrl->formatUrl("couponSetCode", $couponSetCode);
		$url = $mozuUrl->formatUrl("includeCounts", $includeCounts);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for GetCoupons
		* @param string $couponSetCode The unique identifier of the coupon set that the coupons belongs to.
		* @param string $filter A set of filter expressions representing the search parameters for a query. This parameter is optional. Refer to [Sorting and Filtering](../../../../Developer/applications/sorting-filtering.htm) for a list of supported filters.
		* @param bool $includeCounts Specifies whether to include the redemptionCount property in the response body object.
		* @param int $pageSize When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with this parameter set to 25, to get the 51st through the 75th items, set startIndex to 50.
		* @param string $responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
		* @param string $sortBy The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional. Refer to [Sorting and Filtering](../../../../Developer/applications/sorting-filtering.htm) for more information.
		* @param int $startIndex When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with pageSize set to 25, to get the 51st through the 75th items, set this parameter to 50.
		* @return string Resource Url
	*/
	public static function getCouponsUrl($couponSetCode, $filter, $includeCounts, $pageSize, $responseFields, $sortBy, $startIndex)
	{
		$url = "/api/commerce/catalog/admin/couponsets/{couponSetCode}/couponcodes?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}&includeCounts={includeCounts}&responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("couponSetCode", $couponSetCode);
		$url = $mozuUrl->formatUrl("filter", $filter);
		$url = $mozuUrl->formatUrl("includeCounts", $includeCounts);
		$url = $mozuUrl->formatUrl("pageSize", $pageSize);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		$url = $mozuUrl->formatUrl("sortBy", $sortBy);
		$url = $mozuUrl->formatUrl("startIndex", $startIndex);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for AddCoupons
		* @param string $couponSetCode The unique identifier of the coupon set.
		* @return string Resource Url
	*/
	public static function addCouponsUrl($couponSetCode)
	{
		$url = "/api/commerce/catalog/admin/couponsets/{couponSetCode}/couponcodes";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		$url = $mozuUrl->formatUrl("couponSetCode", $couponSetCode);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for DeleteCoupons
		* @param string $couponSetCode The unique identifier of the coupon set that the coupon belongs to.
		* @return string Resource Url
	*/
	public static function deleteCouponsUrl($couponSetCode)
	{
		$url = "/api/commerce/catalog/admin/couponsets/{couponSetCode}/couponcodes/remove";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		$url = $mozuUrl->formatUrl("couponSetCode", $couponSetCode);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for DeleteCoupon
		* @param string $couponCode Code associated with the coupon to remove from the cart.
		* @param string $couponSetCode The unique identifier of the coupon set that the coupon belongs to.
		* @return string Resource Url
	*/
	public static function deleteCouponUrl($couponCode, $couponSetCode)
	{
		$url = "/api/commerce/catalog/admin/couponsets/{couponSetCode}/couponcodes/{couponCode}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"DELETE", false) ;
		$url = $mozuUrl->formatUrl("couponCode", $couponCode);
		$url = $mozuUrl->formatUrl("couponSetCode", $couponSetCode);
		return $mozuUrl;
	}
	
}

?>

