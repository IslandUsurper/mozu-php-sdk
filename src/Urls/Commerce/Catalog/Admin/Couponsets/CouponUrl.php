<?php

/*
* <auto-generated>
*     This code was generated by a Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Urls\Commerce\Catalog\Admin\Couponsets;

use Mozu\Api\MozuUrl;
use Mozu\Api\UrlLocation;

class CouponUrl  {

	/**
		* Get Resource Url for GetCoupon
		* @param string $couponCode Code associated with the coupon to remove from the cart.
		* @param string $couponSetCode 
		* @param bool $includeCounts 
		* @param string $responseFields A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.
		* @return string Resource Url
	*/
	public static function getCouponUrl($couponCode, $couponSetCode, $includeCounts, $responseFields)
	{
		$url = "/api/commerce/catalog/admin/couponsets/{couponSetCode}/couponcodes/{couponCode}?includeCounts={includeCounts}&responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("couponCode", $couponCode);
		$url = $mozuUrl->formatUrl("couponSetCode", $couponSetCode);
		$url = $mozuUrl->formatUrl("includeCounts", $includeCounts);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for GetCoupons
		* @param string $couponSetCode 
		* @param string $filter A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.
		* @param bool $includeCounts 
		* @param int $pageSize The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.
		* @param string $responseFields A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.
		* @param string $sortBy The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.
		* @param int $startIndex When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.
		* @return string Resource Url
	*/
	public static function getCouponsUrl($couponSetCode, $filter, $includeCounts, $pageSize, $responseFields, $sortBy, $startIndex)
	{
		$url = "/api/commerce/catalog/admin/couponsets/{couponSetCode}/couponcodes?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}&includeCounts={includeCounts}&responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("couponSetCode", $couponSetCode);
		$url = $mozuUrl->formatUrl("filter", $filter);
		$url = $mozuUrl->formatUrl("includeCounts", $includeCounts);
		$url = $mozuUrl->formatUrl("pageSize", $pageSize);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		$url = $mozuUrl->formatUrl("sortBy", $sortBy);
		$url = $mozuUrl->formatUrl("startIndex", $startIndex);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for AddCoupons
		* @param string $couponSetCode 
		* @return string Resource Url
	*/
	public static function addCouponsUrl($couponSetCode)
	{
		$url = "/api/commerce/catalog/admin/couponsets/{couponSetCode}/couponcodes";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		$url = $mozuUrl->formatUrl("couponSetCode", $couponSetCode);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for DeleteCoupons
		* @param string $couponSetCode 
		* @return string Resource Url
	*/
	public static function deleteCouponsUrl($couponSetCode)
	{
		$url = "/api/commerce/catalog/admin/couponsets/{couponSetCode}/couponcodes/remove";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		$url = $mozuUrl->formatUrl("couponSetCode", $couponSetCode);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for DeleteCoupon
		* @param string $couponCode Code associated with the coupon to remove from the cart.
		* @param string $couponSetCode 
		* @return string Resource Url
	*/
	public static function deleteCouponUrl($couponCode, $couponSetCode)
	{
		$url = "/api/commerce/catalog/admin/couponsets/{couponSetCode}/couponcodes/{couponCode}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"DELETE", false) ;
		$url = $mozuUrl->formatUrl("couponCode", $couponCode);
		$url = $mozuUrl->formatUrl("couponSetCode", $couponSetCode);
		return $mozuUrl;
	}
	
}

?>

