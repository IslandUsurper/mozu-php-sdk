<?php

/*
* <auto-generated>
*     This code was generated by a Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Urls\Commerce\Catalog\Storefront;

use Mozu\Api\MozuUrl;
use Mozu\Api\UrlLocation;

class ProductSearchResultUrl  {

	/**
		* Get Resource Url for Search
		* @param string $cursorMark 
		* @param bool $enableSearchTuningRules Enables search tuning rules on your site.
		* @param string $facet Individually list the facet fields you want to display in a web storefront product search.
		* @param string $facetFieldRangeQuery Display a range facet not specified in a template in a web storefront product search by listing the facet field and the range to display.
		* @param string $facetHierDepth If filtering using category facets in a hierarchy, the number of category hierarchy levels to return for the facet. This option is only available for category facets.
		* @param string $facetHierPrefix If filtering using category facets in a hierarchy, the parent categories you want to skip in the storefront product search. This parameter is only available for category facets.
		* @param string $facetHierValue If filtering using category facets in a hierarchy, the category in the hierarchy to begin faceting on. This parameter is only available for category facets.
		* @param string $facetPageSize The number of facet values to return for one or more facets.
		* @param string $facetPrefix Use this parameter to filter facet values that are returned by an associated search result by a prefix.For example, to filter on colors that start with b, such as blue, black, or brown you can specify the following:
		* @param string $facetSettings Settings reserved for future facet search functionality on a web storefront product search.
		* @param string $facetStartIndex When paging through multiple facets, the startIndex value for each facet.
		* @param string $facetTemplate The facet template to use on the storefront. A template displays all facets associated with the template on the web storefront product search. Currently, only category-level facet templates are available.
		* @param string $facetTemplateExclude A comma-separated list of the facets to exclude from the facetTemplate.
        
		* @param string $facetTemplateSubset Display a subset of the facets defined in the template specified in facetTemplate parameter.
		* @param string $facetValueFilter The facet values to apply to the filter.
		* @param string $filter A set of filter expressions representing the search parameters for a query. This parameter is optional. Refer to [Sorting and Filtering](../../../../Developer/applications/sorting-filtering.htm) for a list of supported filters.
		* @param int $pageSize The number of results to display on each page when creating paged results from a query. The maximum value is 200.
		* @param string $query Properties for the product location inventory provided for queries to locate products by their location.
		* @param string $responseFields Use this field to include those fields which are not included by default.
		* @param string $responseOptions 
		* @param string $searchSettings The settings to control product search and indexing behavior.
		* @param string $searchTuningRuleCode The unique identifier of the search tuning rule.
		* @param string $searchTuningRuleContext The category ID that the search tuning rule applies to.
		* @param string $sortBy 
		* @param int $startIndex 
		* @return string Resource Url
	*/
	public static function searchUrl($cursorMark, $enableSearchTuningRules, $facet, $facetFieldRangeQuery, $facetHierDepth, $facetHierPrefix, $facetHierValue, $facetPageSize, $facetPrefix, $facetSettings, $facetStartIndex, $facetTemplate, $facetTemplateExclude, $facetTemplateSubset, $facetValueFilter, $filter, $pageSize, $query, $responseFields, $responseOptions, $searchSettings, $searchTuningRuleCode, $searchTuningRuleContext, $sortBy, $startIndex)
	{
		$url = "/api/commerce/catalog/storefront/productsearch/search/?query={query}&filter={filter}&facetTemplate={facetTemplate}&facetTemplateSubset={facetTemplateSubset}&facet={facet}&facetFieldRangeQuery={facetFieldRangeQuery}&facetHierPrefix={facetHierPrefix}&facetHierValue={facetHierValue}&facetHierDepth={facetHierDepth}&facetStartIndex={facetStartIndex}&facetPageSize={facetPageSize}&facetSettings={facetSettings}&facetValueFilter={facetValueFilter}&sortBy={sortBy}&pageSize={pageSize}&startIndex={startIndex}&searchSettings={searchSettings}&enableSearchTuningRules={enableSearchTuningRules}&searchTuningRuleContext={searchTuningRuleContext}&searchTuningRuleCode={searchTuningRuleCode}&facetTemplateExclude={facetTemplateExclude}&facetPrefix={facetPrefix}&responseOptions={responseOptions}&cursorMark={cursorMark}&responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("cursorMark", $cursorMark);
		$url = $mozuUrl->formatUrl("enableSearchTuningRules", $enableSearchTuningRules);
		$url = $mozuUrl->formatUrl("facet", $facet);
		$url = $mozuUrl->formatUrl("facetFieldRangeQuery", $facetFieldRangeQuery);
		$url = $mozuUrl->formatUrl("facetHierDepth", $facetHierDepth);
		$url = $mozuUrl->formatUrl("facetHierPrefix", $facetHierPrefix);
		$url = $mozuUrl->formatUrl("facetHierValue", $facetHierValue);
		$url = $mozuUrl->formatUrl("facetPageSize", $facetPageSize);
		$url = $mozuUrl->formatUrl("facetPrefix", $facetPrefix);
		$url = $mozuUrl->formatUrl("facetSettings", $facetSettings);
		$url = $mozuUrl->formatUrl("facetStartIndex", $facetStartIndex);
		$url = $mozuUrl->formatUrl("facetTemplate", $facetTemplate);
		$url = $mozuUrl->formatUrl("facetTemplateExclude", $facetTemplateExclude);
		$url = $mozuUrl->formatUrl("facetTemplateSubset", $facetTemplateSubset);
		$url = $mozuUrl->formatUrl("facetValueFilter", $facetValueFilter);
		$url = $mozuUrl->formatUrl("filter", $filter);
		$url = $mozuUrl->formatUrl("pageSize", $pageSize);
		$url = $mozuUrl->formatUrl("query", $query);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		$url = $mozuUrl->formatUrl("responseOptions", $responseOptions);
		$url = $mozuUrl->formatUrl("searchSettings", $searchSettings);
		$url = $mozuUrl->formatUrl("searchTuningRuleCode", $searchTuningRuleCode);
		$url = $mozuUrl->formatUrl("searchTuningRuleContext", $searchTuningRuleContext);
		$url = $mozuUrl->formatUrl("sortBy", $sortBy);
		$url = $mozuUrl->formatUrl("startIndex", $startIndex);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for Suggest
		* @param string $groups 
		* @param int $pageSize The number of results to display on each page when creating paged results from a query. The maximum value is 200.
		* @param string $query Properties for the product location inventory provided for queries to locate products by their location.
		* @param string $responseFields Use this field to include those fields which are not included by default.
		* @return string Resource Url
	*/
	public static function suggestUrl($groups, $pageSize, $query, $responseFields)
	{
		$url = "/api/commerce/catalog/storefront/productsearch/suggest?query={query}&groups={groups}&pageSize={pageSize}&responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("groups", $groups);
		$url = $mozuUrl->formatUrl("pageSize", $pageSize);
		$url = $mozuUrl->formatUrl("query", $query);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		return $mozuUrl;
	}
	
}

?>

