<?php


use Mozu\Api\ApiContext;
use Mozu\Api\Resources\Commerce\OrderResource;
use Mozu\Tests\BaseTest;

/**
 * Test class for DocumentResource.
 * Generated by PHPUnit on 2013-12-05 at 12:22:34.
 */
class OrderResourceTest extends BaseTest
{
	/**
	 * @var DocumentResource
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		
		$apiContext = new ApiContext($this->tenantId, 0, 1, 1);
		$this->object = new OrderResource($apiContext);

	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
	}

	 
	/**
	 * @covers Mozu\Api\Resources\Content\Documentlists\DocumentResource::getDocumentContent
	 * @todo Implement testGetDocumentContent().
	 */
	public function testGetOrdersAsync()
	{
		$filters = urlencode("submittedDate gt 2013-12-15T12:21:24z");
		$promise = $this->object->getOrdersAsync('0',100, null,$filters, null, null);
        $promise->then(function($mozuResult){
            $collection = $mozuResult->json();
            var_dump($collection);
        }, function($apiException){
            parent::printError($apiException);
            $this->fail($apiException->getMessage());
        });
        $promise->wait();
	}
	
	
	
	
	/*public function testGetOrder() {
		try{
			$orders = $this->object->getOrder("2",false);
		} catch(ApiException $ex) {
			var_dump($ex->getMessage());
			var_dump($ex->getCorrelationId());
			
		}
	}
	
	public function testGetOrder1() {
		$order = $this->object->getOrder("03cf384c4fdce0aee42bc16800001e7c", true);
		var_dump($order->submittedDate);
	}*/

}
?>