<?php


/**
* <auto-generated>
*     This code was generated by a Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Platform\Developer;

use Mozu\Api\MozuClient;
use Mozu\Api\Clients\Platform\Developer\ApplicationVersionClient;
use Mozu\Api\ApiContext;
use Mozu\Api\DataViewMode;
use Mozu\Api\Headers;

/**
* 
*/
class ApplicationVersionResource {

	/**
	* 
	*
	* @return ApplicationCollection 
	*/
	public function getAllApplications(Mozu\Api\Security\AuthTicket &$userAuthTicket= null)
	{
		$mozuClient = ApplicationVersionClient::getAllApplicationsClient($userAuthTicket);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param int $applicationId 
	* @return Application 
	*/
	public function getApplication($applicationId =  null, Mozu\Api\Security\AuthTicket &$userAuthTicket= null)
	{
		$mozuClient = ApplicationVersionClient::getApplicationClient($applicationId, $userAuthTicket);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param int $applicationVersionId 
	* @return ApplicationVersion 
	*/
	public function getApplicationVersion($applicationVersionId, Mozu\Api\Security\AuthTicket &$userAuthTicket= null)
	{
		$mozuClient = ApplicationVersionClient::getApplicationVersionClient($applicationVersionId, $userAuthTicket);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param int $applicationVersionId 
	* @return PackageCollection 
	*/
	public function getPackages($applicationVersionId, Mozu\Api\Security\AuthTicket &$userAuthTicket= null)
	{
		$mozuClient = ApplicationVersionClient::getPackagesClient($applicationVersionId, $userAuthTicket);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param int $applicationVersionId 
	* @param int $packageId 
	* @return Package 
	*/
	public function getPackage($applicationVersionId, $packageId, Mozu\Api\Security\AuthTicket &$userAuthTicket= null)
	{
		$mozuClient = ApplicationVersionClient::getPackageClient($applicationVersionId, $packageId, $userAuthTicket);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param int $applicationVersionId 
	* @param int $packageId 
	* @return FolderMetadata 
	*/
	public function getPackageItemsMetadata($applicationVersionId, $packageId, Mozu\Api\Security\AuthTicket &$userAuthTicket= null)
	{
		$mozuClient = ApplicationVersionClient::getPackageItemsMetadataClient($applicationVersionId, $packageId, $userAuthTicket);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param int $applicationVersionId 
	* @param string $itempath 
	* @param int $packageId 
	* @return FileMetadata 
	*/
	public function getPackageItemMetadata($applicationVersionId, $packageId, $itempath, Mozu\Api\Security\AuthTicket &$userAuthTicket= null)
	{
		$mozuClient = ApplicationVersionClient::getPackageItemMetadataClient($applicationVersionId, $packageId, $itempath, $userAuthTicket);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param int $applicationVersionId 
	* @param int $packageId 
	* @return Stream 
	*/
	public function getPackageFilesZip($applicationVersionId, $packageId, Mozu\Api\Security\AuthTicket &$userAuthTicket= null)
	{
		$mozuClient = ApplicationVersionClient::getPackageFilesZipClient($applicationVersionId, $packageId, $userAuthTicket);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param int $applicationVersionId 
	* @param Package $package 
	* @return Package 
	*/
	public function addPackage($pkg, $applicationVersionId, Mozu\Api\Security\AuthTicket &$userAuthTicket= null)
	{
		$mozuClient = ApplicationVersionClient::addPackageClient($pkg, $applicationVersionId, $userAuthTicket);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param int $applicationVersionId 
	* @param int $packageId 
	* @param RenameInfo $renameInfo 
	* @return FileMetadata 
	*/
	public function changePackageFileNameOrPath($renameInfo, $applicationVersionId, $packageId, Mozu\Api\Security\AuthTicket &$userAuthTicket= null)
	{
		$mozuClient = ApplicationVersionClient::changePackageFileNameOrPathClient($renameInfo, $applicationVersionId, $packageId, $userAuthTicket);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param int $applicationVersionId 
	* @param string $filepath 
	* @param int $packageId 
	* @param Stream $stream 
	* @return FileMetadata 
	*/
	public function addPackageFile($stream, $applicationVersionId, $packageId, $filepath, $contentType= null, Mozu\Api\Security\AuthTicket &$userAuthTicket= null)
	{
		$mozuClient = ApplicationVersionClient::addPackageFileClient($stream, $applicationVersionId, $packageId, $filepath, $contentType, $userAuthTicket);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param int $applicationVersionId 
	* @param string $filepath 
	* @param int $packageId 
	* @param Stream $stream 
	* @return FileMetadata 
	*/
	public function updatePackageFile($stream, $applicationVersionId, $packageId, $filepath, $contentType= null, Mozu\Api\Security\AuthTicket &$userAuthTicket= null)
	{
		$mozuClient = ApplicationVersionClient::updatePackageFileClient($stream, $applicationVersionId, $packageId, $filepath, $contentType, $userAuthTicket);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param int $applicationVersionId 
	* @param string $filepath 
	* @param int $packageId 
	*/
	public function deletePackageFile($applicationVersionId, $packageId, $filepath, Mozu\Api\Security\AuthTicket &$userAuthTicket= null)
	{
		$mozuClient = ApplicationVersionClient::deletePackageFileClient($applicationVersionId, $packageId, $filepath, $userAuthTicket);
		$mozuClient->execute();

	}
	
	
}

?>

