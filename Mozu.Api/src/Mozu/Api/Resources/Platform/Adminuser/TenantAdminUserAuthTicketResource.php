<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Platform\Adminuser;

use Mozu\Api\MozuClient;
use Mozu\Api\Clients\Platform\Adminuser\TenantAdminUserAuthTicketClient;
use Mozu\Api\Resources\BaseResource;
use Mozu\Api\ApiContext;

/**
* Use the Admin user Authtickets resource to generate and refresh authentication tickets for Mozu administrator or developer account users to access tenants or development stores.
*/
class TenantAdminUserAuthTicketResource extends BaseResource {

	private $apiContext;
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	/**
	* Creates an authentication ticket for the supplied user to specify in API requests associated with the supplied tenant.
	*
	* @param int $tenantId Unique identifier of the Mozu tenant or development store for which to generate the user authentication ticket.
	* @param UserAuthInfo $userAuthInfo The user authentication information required to generate the user authentication ticket, which consists of a user name and password.
	* @return TenantAdminUserAuthTicket 
	*/
	public function createUserAuthTicket($tenantId, $userAuthInfo)
	{
		$mozuClient = TenantAdminUserAuthTicketClient::createUserAuthTicketClient($tenantId, $userAuthInfo);
		$mozuClient = parent::SetContext($this->apiContext, $mozuClient,FALSE);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Generates a new user authentication ticket for the specified tenant by supplying the user's existing refresh token information.
	*
	* @param int $tenantId Unique identifier of the Mozu tenant or development store for which to refresh the authentication ticket.
	* @param TenantAdminUserAuthTicket $existingAuthTicket Properties of the authentication ticket to refresh. The refresh token is required to complete this request.
	* @return TenantAdminUserAuthTicket 
	*/
	public function refreshAuthTicket($tenantId, $existingAuthTicket)
	{
		$mozuClient = TenantAdminUserAuthTicketClient::refreshAuthTicketClient($tenantId, $existingAuthTicket);
		$mozuClient = parent::SetContext($this->apiContext, $mozuClient,FALSE);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Deletes the authentication ticket for the user by supplying the refresh token.
	*
	* @param string $refreshToken Refresh token string associated with the user authentication ticket.
	*/
	public function deleteUserAuthTicket($refreshToken)
	{
		$mozuClient = TenantAdminUserAuthTicketClient::deleteUserAuthTicketClient($refreshToken);
		$mozuClient = parent::SetContext($this->apiContext, $mozuClient,FALSE);
		$mozuClient->execute();

	}
	
	
}

?>

