<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Content\Documentlists;

use Mozu\Api\MozuClient;
use Mozu\Api\Clients\Content\Documentlists\FolderTreeClient;
use Mozu\Api\ApiContext;
use Mozu\Api\DataViewMode;
use Mozu\Api\Headers;

/**
* Use the folder tree subresource to view individual folders in the document hierarchy.
*/
class FolderTreeResource {

	private $apiContext;
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	/**
	* Retrieves the folder hierarchy used to organize documents in lists.
	*
	* @param string $documentListName The name of the document list that contains this folder hierarchy.
	* @param int $levels The number of levels in the folder hierarchy to return.
	* @param string $rootFolderId The unique identifier of the top-level folder in the document list.
	* @param string $rootFolderPath The location in the document hierarchy of the top-level folder in the document list.
	* @return FolderTree 
	*/
	public function getFolderTree( $documentListName, $levels =  null, $rootFolderId =  null, $rootFolderPath =  null, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = FolderTreeClient::getFolderTreeClient( $documentListName, $levels, $rootFolderId, $rootFolderPath, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	
}

?>

