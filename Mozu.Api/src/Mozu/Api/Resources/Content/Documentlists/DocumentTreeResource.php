<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Content\Documentlists;

use Mozu\Api\MozuClient;
use Mozu\Api\Clients\Content\Documentlists\DocumentTreeClient;
use Mozu\Api\ApiContext;
use Mozu\Api\DataViewMode;
use Mozu\Api\Headers;

/**
* Use the document tree subresource to retrieve documents and manage content within the document hierarchy.
*/
class DocumentTreeResource {

	private $apiContext;
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	/**
	* Retrieve the content associated with the document, such as a product image or PDF specifications file.
	*
	* @param string $documentListName The name of the document list associated with the document.
	* @param string $documentName The name of the document, which is unique within its folder.
	* @param string $folderId If applicable, the unique identifier of the folder that contains the document.
	* @param string $folderPath If applicable, the path of the folder hierarchy location associated with the document.
	* @return Stream 
	*/
	public function getTreeDocumentContent($dataViewMode,  $documentListName,  $documentName, $folderId =  null, $folderPath =  null, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = DocumentTreeClient::getTreeDocumentContentClient($dataViewMode,  $documentListName,  $documentName, $folderId, $folderPath, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Retrieves a document based on its document list and folder path in the document hierarchy.
	*
	* @param string $documentListName The name of the document list associated with the document.
	* @param string $documentName The name of the document, which is unique within its folder.
	* @param string $folderId If applicable, the unique identifier of the folder that contains the document.
	* @param string $folderPath If applicable, the path of the folder hierarchy location that contains the document.
	* @return Document 
	*/
	public function getTreeDocument($dataViewMode,  $documentListName,  $documentName, $folderId =  null, $folderPath =  null, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = DocumentTreeClient::getTreeDocumentClient($dataViewMode,  $documentListName,  $documentName, $folderId, $folderPath, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Updates the content associated with a document, such as a product image or PDF specifications file, based on the document's position in the document hierarchy.
	*
	* @param string $documentListName The name of the document list associated with the document.
	* @param string $documentName The name of the document, which is unique within its folder.
	* @param string $folderId If applicable, the unique identifier of the folder that contains the document.
	* @param string $folderPath If applicable, the path of the folder hierarchy location associated with the document.
	* @param Stream $stream 
	*/
	public function updateTreeDocumentContent($dataViewMode, $stream,  $documentListName,  $documentName, $folderId =  null, $folderPath =  null, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = DocumentTreeClient::updateTreeDocumentContentClient($dataViewMode, $stream,  $documentListName,  $documentName, $folderId, $folderPath, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();

	}
	
	/**
	* Deletes the content associated with a document, such as a product image or PDF specifications file.
	*
	* @param string $documentListName The name of the document list associated with the document.
	* @param string $documentName The name of the document, which is unique within its folder.
	* @param string $folderId If applicable, the unique identifier of the folder that contains the document.
	* @param string $folderPath If applicable, the path of the folder hierarchy location associated with the document.
	* @param Stream $stream 
	*/
	public function deleteTreeDocumentContent($dataViewMode, $stream,  $documentListName,  $documentName, $folderId =  null, $folderPath =  null, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = DocumentTreeClient::deleteTreeDocumentContentClient($dataViewMode, $stream,  $documentListName,  $documentName, $folderId, $folderPath, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();

	}
	
	
}

?>

