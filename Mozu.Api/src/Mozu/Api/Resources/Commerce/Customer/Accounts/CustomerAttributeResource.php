<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Customer\Accounts;

use Mozu\Api\MozuClient;
use Mozu\Api\Clients\Commerce\Customer\Accounts\CustomerAttributeClient;
use Mozu\Api\ApiContext;
use Mozu\Api\DataViewMode;
use Mozu\Api\Headers;

/**
* Mozu customers and merchants can create, view, update, and delete attributes for a customer account.
*/
class CustomerAttributeResource {

	private $apiContext;
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	/**
	* 
	*
	* @param int $accountId 
	* @param string $attributeFQN 
	* @return CustomerAttribute 
	*/
	public function getAccountAttributeByFqn( $accountId,  $attributeFQN, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = CustomerAttributeClient::getAccountAttributeByFqnClient( $accountId,  $attributeFQN, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Retrieves the contents of an attribute associated with the specified customer account.
	*
	* @param int $accountId Identifier of the customer account associated with the attribute to retrieve.
	* @param int $attributeId Identifier of the customer account attribute to retrieve.
	* @return CustomerAttribute 
	*/
	public function getAccountAttribute( $accountId,  $attributeId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = CustomerAttributeClient::getAccountAttributeClient( $accountId,  $attributeId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Retrieves the list of customer account attributes.
	*
	* @param int $accountId Identifier of the customer account associated with the attributes to retrieve.
	* @param string $filter 
	* @param int $pageSize 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return CustomerAttributeCollection 
	*/
	public function getAccountAttributes( $accountId, $filter =  null, $pageSize =  null, $sortBy =  null, $startIndex =  null, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = CustomerAttributeClient::getAccountAttributesClient( $accountId, $filter, $pageSize, $sortBy, $startIndex, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param int $accountId 
	* @param CustomerAttribute $customerAccountAttribute 
	* @return CustomerAttribute 
	*/
	public function addAccountAttribute($customerAccountAttribute,  $accountId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = CustomerAttributeClient::addAccountAttributeClient($customerAccountAttribute,  $accountId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Update a single customer account attribute by providing the customer account ID. This operation can optionally indicate whether or not items missing from the collection should be removed.
	*
	* @param int $accountId Identifier of the customer account associated with the attribute.
	* @param CustomerAttribute $customerAccountAttribute The properties of the customer account attribute being updated.
	* @return CustomerAttribute 
	*/
	public function updateAccountAttribute($customerAccountAttribute,  $accountId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = CustomerAttributeClient::updateAccountAttributeClient($customerAccountAttribute,  $accountId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	
}

?>

