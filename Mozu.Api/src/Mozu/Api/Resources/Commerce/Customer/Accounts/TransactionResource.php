<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Customer\Accounts;

use Mozu\Api\MozuClient;
use Mozu\Api\Clients\Commerce\Customer\Accounts\TransactionClient;
use Mozu\Api\ApiContext;
use Mozu\Api\DataViewMode;
use Mozu\Api\Headers;

/**
* Use the Customer Account Transactions resource to manage the transactions associated with a customer account.
*/
class TransactionResource {

	private $apiContext;
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	/**
	* Retrieves a list of transactions associated with the customer account specified in the request.
	*
	* @param int $accountId Unique identifier of the customer account for which to retrieve transactions.
	* @return array|Transaction 
	*/
	public function getTransactions($accountId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = TransactionClient::getTransactionsClient($accountId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Creates a new transaction for the customer account specified in the request.
	*
	* @param int $accountId Unique identifier of the customer account.
	* @param Transaction $transaction Properties of the transaction to create for the customer account.
	* @return Transaction 
	*/
	public function addTransaction($transaction, $accountId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = TransactionClient::addTransactionClient($transaction, $accountId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Deletes a transaction from the customer account specified in the request.
	*
	* @param int $accountId Unique identifier of the customer account from which to delete the transaction.
	* @param string $transactionId Unique identifier of the transaction to delete.
	*/
	public function removeTransaction($accountId, $transactionId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = TransactionClient::removeTransactionClient($accountId, $transactionId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();

	}
	
	
}

?>

