<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Customer;

use Mozu\Api\MozuClient;
use Mozu\Api\Clients\Commerce\Customer\CustomerAccountClient;
use Mozu\Api\ApiContext;

/**
* 
*/
class CustomerAccountResource {

	private $apiContext;
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	/**
	* 
	*
	* @param string $fields 
	* @param string $filter 
	* @param int $pageSize 
	* @param string $q 
	* @param int $qLimit 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return CustomerAccountCollection 
	*/
	public function getAccounts($fields =  null, $filter =  null, $pageSize =  null, $q =  null, $qLimit =  null, $sortBy =  null, $startIndex =  null, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = CustomerAccountClient::getAccountsClient($fields, $filter, $pageSize, $q, $qLimit, $sortBy, $startIndex, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param int $accountId 
	* @return CustomerAccount 
	*/
	public function getAccount( $accountId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = CustomerAccountClient::getAccountClient( $accountId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param int $accountId 
	* @param int $inStockNotificationSubscriptionId 
	* @return CustomerInStockNotificationSubscription 
	*/
	public function getInStockNotification( $accountId,  $inStockNotificationSubscriptionId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = CustomerAccountClient::getInStockNotificationClient( $accountId,  $inStockNotificationSubscriptionId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param int $accountId 
	* @param string $filter 
	* @param int $pageSize 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return CustomerInStockNotificationSubscriptionCollection 
	*/
	public function getInStockNotifications( $accountId, $filter =  null, $pageSize =  null, $sortBy =  null, $startIndex =  null, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = CustomerAccountClient::getInStockNotificationsClient( $accountId, $filter, $pageSize, $sortBy, $startIndex, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param CustomerAccount $account 
	* @return CustomerAccount 
	*/
	public function addAccount($account, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = CustomerAccountClient::addAccountClient($account, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param int $accountId 
	* @param CustomerInStockNotificationSubscription $inStockNotificationSubscription 
	* @return CustomerInStockNotificationSubscription 
	*/
	public function addInStockNotification($inStockNotificationSubscription,  $accountId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = CustomerAccountClient::addInStockNotificationClient($inStockNotificationSubscription,  $accountId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param int $accountId 
	*/
	public function recomputeCustomerLifetimeValue( $accountId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = CustomerAccountClient::recomputeCustomerLifetimeValueClient( $accountId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();

	}
	
	/**
	* 
	*
	* @param int $accountId 
	* @param CustomerAccount $account 
	* @return CustomerAccount 
	*/
	public function updateAccount($account,  $accountId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = CustomerAccountClient::updateAccountClient($account,  $accountId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param int $accountId 
	*/
	public function deleteAccount( $accountId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = CustomerAccountClient::deleteAccountClient( $accountId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();

	}
	
	/**
	* 
	*
	* @param int $accountId 
	* @param int $inStockNotificationSubscriptionId 
	*/
	public function deleteInStockNotificationSubscription( $accountId,  $inStockNotificationSubscriptionId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = CustomerAccountClient::deleteInStockNotificationSubscriptionClient( $accountId,  $inStockNotificationSubscriptionId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();

	}
	
	
}

?>

