<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Returns;

use Mozu\Api\MozuClient;
use Mozu\Api\Clients\Commerce\Returns\PackageClient;
use Mozu\Api\ApiContext;

/**
* 
*/
class PackageResource {

	private $apiContext;
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	/**
	* 
	*
	* @param string $packageId 
	* @param string $returnId 
	* @return Package 
	*/
	public function getPackage( $packageId,  $returnId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = PackageClient::getPackageClient( $packageId,  $returnId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param string $packageId 
	* @param string $returnId 
	*/
	public function getPackageLabel( $packageId,  $returnId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = PackageClient::getPackageLabelClient( $packageId,  $returnId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();

	}
	
	/**
	* 
	*
	* @param string $returnId 
	* @param Package $package 
	* @return Package 
	*/
	public function createPackage($pkg,  $returnId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = PackageClient::createPackageClient($pkg,  $returnId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param string $packageId 
	* @param string $returnId 
	* @param Package $package 
	* @return Package 
	*/
	public function updatePackage($pkg,  $packageId,  $returnId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = PackageClient::updatePackageClient($pkg,  $packageId,  $returnId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param string $packageId 
	* @param string $returnId 
	*/
	public function deletePackage( $packageId,  $returnId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = PackageClient::deletePackageClient( $packageId,  $returnId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();

	}
	
	
}

?>

