<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Returns;

use Mozu\Api\MozuClient;
use Mozu\Api\Clients\Commerce\Returns\ShipmentClient;
use Mozu\Api\ApiContext;
use Mozu\Api\DataViewMode;
use Mozu\Api\Headers;

/**
* Use the return shipments subresource to manage shipments for a return replacement.
*/
class ShipmentResource {

	private $apiContext;
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	/**
	* Retrieves the details of the specified return replacement shipment.
	*
	* @param string $returnId Unique identifier of the return associated with the replacement shipment to retrieve.
	* @param string $shipmentId Unique identifier of the return replacement shipment to retrieve.
	* @return Shipment 
	*/
	public function getShipment($returnId, $shipmentId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = ShipmentClient::getShipmentClient($returnId, $shipmentId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Creates a shipment from one or more packages associated with a return replacement.
	*
	* @param string $returnId Unique identifier of the return for which to create replacement package shipments.
	* @param array|string $packageIds List of packages in the return replacement shipment.
	* @return array|Package 
	*/
	public function createPackageShipments($packageIds, $returnId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = ShipmentClient::createPackageShipmentsClient($packageIds, $returnId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Deletes a shipment for a return replacement.
	*
	* @param string $returnId Unique identifier of the return associated with the replacement shipment to delete.
	* @param string $shipmentId Unique identifier of the return replacement shipment to delete.
	*/
	public function deleteShipment($returnId, $shipmentId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = ShipmentClient::deleteShipmentClient($returnId, $shipmentId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();

	}
	
	
}

?>

