<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce;

use Mozu\Api\MozuClient;
use Mozu\Api\Clients\Commerce\OrderClient;
use Mozu\Api\ApiContext;

/**
* 
*/
class OrderResource {

	private $apiContext;
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $q 
	* @param int $qLimit 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return OrderCollection 
	*/
	public function getOrders($filter =  null, $pageSize =  null, $q =  null, $qLimit =  null, $sortBy =  null, $startIndex =  null, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = OrderClient::getOrdersClient($filter, $pageSize, $q, $qLimit, $sortBy, $startIndex, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param string $orderId 
	* @return array|string 
	*/
	public function getAvailableActions( $orderId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = OrderClient::getAvailableActionsClient( $orderId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param string $orderId 
	* @return array|TaxableOrder 
	*/
	public function getTaxableOrders( $orderId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = OrderClient::getTaxableOrdersClient( $orderId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param bool $draft 
	* @param string $orderId 
	* @return Order 
	*/
	public function getOrder( $orderId, $draft =  null, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = OrderClient::getOrderClient( $orderId, $draft, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param Order $order 
	* @return Order 
	*/
	public function createOrder($order, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = OrderClient::createOrderClient($order, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param string $cartId 
	* @return Order 
	*/
	public function createOrderFromCart( $cartId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = OrderClient::createOrderFromCartClient( $cartId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param string $orderId 
	* @param OrderAction $action 
	* @return Order 
	*/
	public function performOrderAction($action,  $orderId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = OrderClient::performOrderActionClient($action,  $orderId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param int $discountId 
	* @param string $orderId 
	* @param string $updateMode 
	* @param string $version 
	* @param AppliedDiscount $discount 
	* @return Order 
	*/
	public function updateOrderDiscount($discount,  $discountId,  $orderId, $updateMode =  null, $version =  null, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = OrderClient::updateOrderDiscountClient($discount,  $discountId,  $orderId, $updateMode, $version, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param string $orderId 
	* @param string $version 
	*/
	public function deleteOrderDraft( $orderId, $version =  null, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = OrderClient::deleteOrderDraftClient( $orderId, $version, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();

	}
	
	/**
	* 
	*
	* @param string $orderId 
	* @return Order 
	*/
	public function changeOrderUserId( $orderId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = OrderClient::changeOrderUserIdClient( $orderId, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* 
	*
	* @param string $orderId 
	* @param string $updateMode 
	* @param string $version 
	* @param Order $order 
	* @return Order 
	*/
	public function updateOrder($order,  $orderId, $updateMode =  null, $version =  null, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$mozuClient = OrderClient::updateOrderClient($order,  $orderId, $updateMode, $version, $authTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	
}

?>

