<?php


/**
* <auto-generated>
*     This code was generated by a Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Carts;

use Mozu\Api\MozuClient;
use Mozu\Api\Clients\Commerce\Carts\ChangeMessageClient;
use Mozu\Api\ApiContext;
use Mozu\Api\DataViewMode;
use Mozu\Api\Headers;

/**
* System messages for live carts to notify the shopper about a product price or inventory change. System-supplied and read-only. For example: Product price is reduced due to a buy one, get one 50% off (BOGO) sale. A message may appear if the product is out of stock during the cart shopping process.
*/
class ChangeMessageResource {

	private $apiContext;
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	/**
	* Retrieves messages to and from the current shopper. These are messages supplied by the system to notify the shopper of price increases or decreases or product unavailability.
	*
	* @return CartChangeMessageCollection 
	*/
	public function getMessages(Mozu\Api\Security\AuthTicket &$userAuthTicket= null)
	{
		$mozuClient = ChangeMessageClient::getMessagesClient($userAuthTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
	/**
	* Deletes all messages associated with the cart of the current shopper.
	*
	*/
	public function removeAllMessages(Mozu\Api\Security\AuthTicket &$userAuthTicket= null)
	{
		$mozuClient = ChangeMessageClient::removeAllMessagesClient($userAuthTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();

	}
	
	/**
	* Removes a single message associated with the cart of the current shopper.
	*
	* @param string $messageId Identifier of the message to remove from the cart.
	*/
	public function removeMessage($messageId, Mozu\Api\Security\AuthTicket &$userAuthTicket= null)
	{
		$mozuClient = ChangeMessageClient::removeMessageClient($messageId, $userAuthTicket);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();

	}
	
	
}

?>

