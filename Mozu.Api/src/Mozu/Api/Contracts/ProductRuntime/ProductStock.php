<?php

/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Contracts\ProductRuntime;



/**
*	Properties of products accounted for in inventory that are available for purchase.
*/
class ProductStock
{
	/**
	*If true, a shopper can order the product when it is out of stock through the site, but can get the product once it is available again in inventory or through dropshipping.
	*/
	public $IsBackOrderAllowed;
	public function getIsBackOrderAllowed() {
		return $this->IsBackOrderAllowed;
	}
	
	public function setIsBackOrderAllowed($isBackOrderAllowed) {
		$this->IsBackOrderAllowed = $isBackOrderAllowed;
		return $this;
	}

	/**
	*If true, the product does not appear on the storefront when it is not in stock. If false, the product stays on the storefront even when it is out of stock.
	*/
	public $IsHiddenWhenOutOfStock;
	public function getIsHiddenWhenOutOfStock() {
		return $this->IsHiddenWhenOutOfStock;
	}
	
	public function setIsHiddenWhenOutOfStock($isHiddenWhenOutOfStock) {
		$this->IsHiddenWhenOutOfStock = $isHiddenWhenOutOfStock;
		return $this;
	}

	/**
	*If true, the Products services will manage inventory for this product.
	*/
	public $ManageStock;
	public function getManageStock() {
		return $this->ManageStock;
	}
	
	public function setManageStock($manageStock) {
		$this->ManageStock = $manageStock;
		return $this;
	}

	/**
	*The number of products accounted for in inventory that are available for purchase.
	*/
	public $StockAvailable;
	public function getStockAvailable() {
		return $this->StockAvailable;
	}
	
	public function setStockAvailable($stockAvailable) {
		$this->StockAvailable = $stockAvailable;
		return $this;
	}

}

?>
