<?php

/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Contracts\ProductRuntime;



/**
*	The value selected for a facet when indexing a product search.
*/
class FacetValue
{
	/**
	*If applicable, the values of any parent category facets in a hierarchy. Hierarchical facets only apply for product categories.
	*/
	public $parentFacetValue;
	public function getParentFacetValue() {
		return $this->parentFacetValue;
	}
	
	public function setParentFacetValue($parentFacetValue) {
		$this->parentFacetValue = $parentFacetValue;
		return $this;
	}

	/**
	*The maximum value selected or entered for the facet range query.
	*/
	public $rangeQueryValueEnd;
	public function getRangeQueryValueEnd() {
		return $this->rangeQueryValueEnd;
	}
	
	public function setRangeQueryValueEnd($rangeQueryValueEnd) {
		$this->rangeQueryValueEnd = $rangeQueryValueEnd;
		return $this;
	}

	/**
	*The minimum value selected or entered for the facet range query.
	*/
	public $rangeQueryValueStart;
	public function getRangeQueryValueStart() {
		return $this->rangeQueryValueStart;
	}
	
	public function setRangeQueryValueStart($rangeQueryValueStart) {
		$this->rangeQueryValueStart = $rangeQueryValueStart;
		return $this;
	}

	/**
	*String representation of the facet value selected for the product search.
	*/
	public $value;
	public function getValue() {
		return $this->value;
	}
	
	public function setValue($value) {
		$this->value = $value;
		return $this;
	}

	/**
	*The number of facet value selections in a product search result set.
	*/
	public $count;
	public function getCount() {
		return $this->count;
	}
	
	public function setCount($count) {
		$this->count = $count;
		return $this;
	}

	/**
	*Submits the selected facet value as a facet value filter.
	*/
	public $filterValue;
	public function getFilterValue() {
		return $this->filterValue;
	}
	
	public function setFilterValue($filterValue) {
		$this->filterValue = $filterValue;
		return $this;
	}

	/**
	*If true, the facet value is applied as a filter in the storefront product search.
	*/
	public $isApplied;
	public function getIsApplied() {
		return $this->isApplied;
	}
	
	public function setIsApplied($isApplied) {
		$this->isApplied = $isApplied;
		return $this;
	}

	/**
	*The descriptive label of the facet value.
	*/
	public $label;
	public function getLabel() {
		return $this->label;
	}
	
	public function setLabel($label) {
		$this->label = $label;
		return $this;
	}

	/**
	*If applicable, the values of any subcategory facets in a hierarchy. Hierarchical facets only apply for product categories.
	*/
	public $childrenFacetValues;
	public function getChildrenFacetValues() {
		return $this->childrenFacetValues;
	}
	
	public function setChildrenFacetValues($childrenFacetValues) {
		$this->childrenFacetValues = $childrenFacetValues;
		return $this;
	}

}

?>
