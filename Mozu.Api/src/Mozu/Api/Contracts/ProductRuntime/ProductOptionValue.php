<?php

/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Contracts\ProductRuntime;



/**
*	Represents the values that are the product option selections for a shopper to choose when ordering a product.
*/
class ProductOptionValue
{
	/**
	*Unique identifier of the product attribute value.
	*/
	public $attributeValueId;
	public function getAttributeValueId() {
		return $this->attributeValueId;
	}
	
	public function setAttributeValueId($attributeValueId) {
		$this->attributeValueId = $attributeValueId;
		return $this;
	}

	/**
	*The difference between the highest price and the lowest price.
	*/
	public $deltaPrice;
	public function getDeltaPrice() {
		return $this->deltaPrice;
	}
	
	public function setDeltaPrice($deltaPrice) {
		$this->deltaPrice = $deltaPrice;
		return $this;
	}

	/**
	*The difference between the highest weight and the lowest weight.
	*/
	public $deltaWeight;
	public function getDeltaWeight() {
		return $this->deltaWeight;
	}
	
	public function setDeltaWeight($deltaWeight) {
		$this->deltaWeight = $deltaWeight;
		return $this;
	}

	/**
	*If true, the product option value is the default value that the merchant supplied.
	*/
	public $isDefault;
	public function getIsDefault() {
		return $this->isDefault;
	}
	
	public function setIsDefault($isDefault) {
		$this->isDefault = $isDefault;
		return $this;
	}

	/**
	*If true, the product option value is available for a shopper to choose. During configuration, this property will be false if the option value is invalid with other selected options.
	*/
	public $isEnabled;
	public function getIsEnabled() {
		return $this->isEnabled;
	}
	
	public function setIsEnabled($isEnabled) {
		$this->isEnabled = $isEnabled;
		return $this;
	}

	/**
	*If true, the entity is selected. If false, the entity is not selected.
	*/
	public $isSelected;
	public function getIsSelected() {
		return $this->isSelected;
	}
	
	public function setIsSelected($isSelected) {
		$this->isSelected = $isSelected;
		return $this;
	}

	/**
	*The product attribute value entered by the shopper, if applicable.
	*/
	public $shopperEnteredValue;
	public function getShopperEnteredValue() {
		return $this->shopperEnteredValue;
	}
	
	public function setShopperEnteredValue($shopperEnteredValue) {
		$this->shopperEnteredValue = $shopperEnteredValue;
		return $this;
	}

	/**
	*The string value entered for a product option attribute.
	*/
	public $stringValue;
	public function getStringValue() {
		return $this->stringValue;
	}
	
	public function setStringValue($stringValue) {
		$this->stringValue = $stringValue;
		return $this;
	}

	/**
	*The value of a product option attribute.
	*/
	public $value;
	public function getValue() {
		return $this->value;
	}
	
	public function setValue($value) {
		$this->value = $value;
		return $this;
	}

}

?>
