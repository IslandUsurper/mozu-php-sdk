<?php

/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Contracts\ProductRuntime;



/**
*	The product attribute details common between all attribute types - properties, options, and extras.
*/
class AttributeDetail
{
	/**
	*The data type (such as datetime or string) associated with the attribute.
	*/
	public $dataType;
	public function getDataType() {
		return $this->dataType;
	}
	
	public function setDataType($dataType) {
		$this->dataType = $dataType;
		return $this;
	}

	/**
	*Unique sequence of the attribute for its data type.
	*/
	public $dataTypeSequence;
	public function getDataTypeSequence() {
		return $this->dataTypeSequence;
	}
	
	public function setDataTypeSequence($dataTypeSequence) {
		$this->dataTypeSequence = $dataTypeSequence;
		return $this;
	}

	/**
	*Description of the attribute in the language specified by the locale code.
	*/
	public $description;
	public function getDescription() {
		return $this->description;
	}
	
	public function setDescription($description) {
		$this->description = $description;
		return $this;
	}

	/**
	*The input type (such as date or text area) accepted for the attribute's data type.
	*/
	public $inputType;
	public function getInputType() {
		return $this->inputType;
	}
	
	public function setInputType($inputType) {
		$this->inputType = $inputType;
		return $this;
	}

	/**
	*Name of the atrribute in the language specified by the locale code.
	*/
	public $name;
	public function getName() {
		return $this->name;
	}
	
	public function setName($name) {
		$this->name = $name;
		return $this;
	}

	/**
	*The usage type of the product attribute, which is property, option, or extra.
	*/
	public $usageType;
	public function getUsageType() {
		return $this->usageType;
	}
	
	public function setUsageType($usageType) {
		$this->usageType = $usageType;
		return $this;
	}

	/**
	*The type of value for the attribute, which is either ShopperEntered, AdminEntered, or Predefined.
	*/
	public $valueType;
	public function getValueType() {
		return $this->valueType;
	}
	
	public function setValueType($valueType) {
		$this->valueType = $valueType;
		return $this;
	}

	/**
	*Validation rules of an attribute that determine which values are valid for ShopperEntered and AdminEntered ValueTypes.
	*/
	public $validation;
	public function getValidation() {
		return $this->validation;
	}
	
	public function setValidation($validation) {
		$this->validation = $validation;
		return $this;
	}

}

?>
