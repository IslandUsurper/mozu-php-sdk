<?php

/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Contracts\ProductAdmin;



/**
*	Properties of the product extra to create such as the attribute detail, fully qualified name, and list of product extra values. Setting up product extras in Product Admin allows for shopper-entered information such as th initials on a monogram.
*/
class ProductExtra
{
	/**
	*"The fully qualified name of the attribute, which is a user defined attribute identifier."
	*/
	public $attributeFQN;
	public function getAttributeFQN() {
		return $this->attributeFQN;
	}
	
	public function setAttributeFQN($attributeFQN) {
		$this->attributeFQN = $attributeFQN;
		return $this;
	}

	/**
	*If true, the property has several selections.
	*/
	public $isMultiSelect;
	public function getIsMultiSelect() {
		return $this->isMultiSelect;
	}
	
	public function setIsMultiSelect($isMultiSelect) {
		$this->isMultiSelect = $isMultiSelect;
		return $this;
	}

	/**
	*If true, the product extra is required for the request to return a valid response.
	*/
	public $isRequired;
	public function getIsRequired() {
		return $this->isRequired;
	}
	
	public function setIsRequired($isRequired) {
		$this->isRequired = $isRequired;
		return $this;
	}

	/**
	*The list of values that populate a product extra as set in the Admin for the Storefront.
	*/
	public $values;
	public function getValues() {
		return $this->values;
	}
	
	public function setValues($values) {
		$this->values = $values;
		return $this;
	}

}

?>
