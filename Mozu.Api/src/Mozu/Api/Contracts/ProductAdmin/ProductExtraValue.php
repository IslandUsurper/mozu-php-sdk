<?php

/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Contracts\ProductAdmin;



/**
*	Properties of a defined value for a product extra attribute.
*/
class ProductExtraValue
{
	/**
	*The difference between the weight associated with this product extra and the base product. For example, if a product with a monogram weighs an extra 1/4 lb, the DeltaWeight value is "0.25".
	*/
	public $DeltaWeight;
	public function getDeltaWeight() {
		return $this->DeltaWeight;
	}
	
	public function setDeltaWeight($deltaWeight) {
		$this->DeltaWeight = $deltaWeight;
		return $this;
	}

	/**
	*If true, the value for the product extra is selected by default. Shopper entered extras cannot be defaulted.
	*/
	public $IsDefaulted;
	public function getIsDefaulted() {
		return $this->IsDefaulted;
	}
	
	public function setIsDefaulted($isDefaulted) {
		$this->IsDefaulted = $isDefaulted;
		return $this;
	}

	/**
	*Properties of a defined value for a product extra attribute.
	*/
	public $Value;
	public function getValue() {
		return $this->Value;
	}
	
	public function setValue($value) {
		$this->Value = $value;
		return $this;
	}

	/**
	*Detail of the product extra attribute vocabulary value.
	*/
	public $AttributeVocabularyValueDetail;
	public function getAttributeVocabularyValueDetail() {
		return $this->AttributeVocabularyValueDetail;
	}
	
	public function setAttributeVocabularyValueDetail($attributeVocabularyValueDetail) {
		$this->AttributeVocabularyValueDetail = $attributeVocabularyValueDetail;
		return $this;
	}

	/**
	*The difference between the price associated with this product extra and the base product. For example, if a product with a defined monogram extra costs an additional $10, the DeltaPrice value is "10".
	*/
	public $DeltaPrice;
	public function getDeltaPrice() {
		return $this->DeltaPrice;
	}
	
	public function setDeltaPrice($deltaPrice) {
		$this->DeltaPrice = $deltaPrice;
		return $this;
	}

}

?>
