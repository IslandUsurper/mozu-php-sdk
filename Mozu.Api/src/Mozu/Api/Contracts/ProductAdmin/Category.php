<?php

/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Contracts\ProductAdmin;



/**
*	A descriptive container in a storefront hierarchy to organize collections of products. Only available at the site-level when multiple sites and site groups exist.
*/
class Category
{
		public $catalogId;
	public function getCatalogId() {
		return $this->catalogId;
	}
	
	public function setCatalogId($catalogId) {
		$this->catalogId = $catalogId;
		return $this;
	}

	/**
	*The number of children (subcategories, for example) that stem from a parent (top-level category).
	*/
	public $childCount;
	public function getChildCount() {
		return $this->childCount;
	}
	
	public function setChildCount($childCount) {
		$this->childCount = $childCount;
		return $this;
	}

	/**
	*Identifier of the entity.
	*/
	public $id;
	public function getId() {
		return $this->id;
	}
	
	public function setId($id) {
		$this->id = $id;
		return $this;
	}

	/**
	*If true, the admin product category is displayed in the store. If true, the category is not displayed.
	*/
	public $isDisplayed;
	public function getIsDisplayed() {
		return $this->isDisplayed;
	}
	
	public function setIsDisplayed($isDisplayed) {
		$this->isDisplayed = $isDisplayed;
		return $this;
	}

	/**
	*Identifier of the parent or top-level category.
	*/
	public $parentCategoryId;
	public function getParentCategoryId() {
		return $this->parentCategoryId;
	}
	
	public function setParentCategoryId($parentCategoryId) {
		$this->parentCategoryId = $parentCategoryId;
		return $this;
	}

	/**
	*The number of products in a list.
	*/
	public $productCount;
	public function getProductCount() {
		return $this->productCount;
	}
	
	public function setProductCount($productCount) {
		$this->productCount = $productCount;
		return $this;
	}

	/**
	*The numeric value that denotes the place this entity occupies in the order of the entity list.
	*/
	public $sequence;
	public function getSequence() {
		return $this->sequence;
	}
	
	public function setSequence($sequence) {
		$this->sequence = $sequence;
		return $this;
	}

	/**
	*Identifier and datetime stamp information recorded when creating or updating a resource entity. System-supplied and read-only.
	*/
	public $auditInfo;
	public function getAuditInfo() {
		return $this->auditInfo;
	}
	
	public function setAuditInfo($auditInfo) {
		$this->auditInfo = $auditInfo;
		return $this;
	}

	/**
	*Complex type that contains content for a language specified by LocaleCode.
	*/
	public $content;
	public function getContent() {
		return $this->content;
	}
	
	public function setContent($content) {
		$this->content = $content;
		return $this;
	}

}

?>
