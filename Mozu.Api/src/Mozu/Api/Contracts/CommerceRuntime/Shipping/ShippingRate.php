<?php

/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Contracts\CommerceRuntime\Shipping;



/**
*	Properties of a shipping price rate based on the type of shipping service per carrier.
*/
class ShippingRate
{
	/**
	*3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
	*/
	public $ISOCurrencyCode;
	public function getISOCurrencyCode() {
		return $this->ISOCurrencyCode;
	}
	
	public function setISOCurrencyCode($iSOCurrencyCode) {
		$this->ISOCurrencyCode = $iSOCurrencyCode;
		return $this;
	}

	/**
	*If true, the shipping rate for the service type is valid for the carrier.
	*/
	public $IsValid;
	public function getIsValid() {
		return $this->IsValid;
	}
	
	public function setIsValid($isValid) {
		$this->IsValid = $isValid;
		return $this;
	}

	/**
	*Collection of messages that indicate reasons why a shipping rate is invalid.
	*/
	public $Messages;
	public function getMessages() {
		return $this->Messages;
	}
	
	public function setMessages($messages) {
		$this->Messages = $messages;
		return $this;
	}

	/**
	*The amount a shopper pays for shipping, which can include any merchant-provided offers or discounts on shipping.
	*/
	public $Price;
	public function getPrice() {
		return $this->Price;
	}
	
	public function setPrice($price) {
		$this->Price = $price;
		return $this;
	}

	/**
	*The code associated with the carrier's shipping method service type. Service type codes include a prefix that indicates the carrier. For example: FEDEX_INTERNATIONAL_STANDARD
	*/
	public $ShippingMethodCode;
	public function getShippingMethodCode() {
		return $this->ShippingMethodCode;
	}
	
	public function setShippingMethodCode($shippingMethodCode) {
		$this->ShippingMethodCode = $shippingMethodCode;
		return $this;
	}

	/**
	*Carrier-supplied name of a service type, such as "UPS Ground" or "2nd Day Air".
	*/
	public $ShippingMethodName;
	public function getShippingMethodName() {
		return $this->ShippingMethodName;
	}
	
	public function setShippingMethodName($shippingMethodName) {
		$this->ShippingMethodName = $shippingMethodName;
		return $this;
	}

}

?>
