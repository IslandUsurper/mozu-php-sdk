<?php

/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Contracts\CommerceRuntime\Shipping;



/**
*	Properties of a physical package shipped for an order.
*/
class Package
{
	/**
	*The actions that a user can perform for a package at this time.
	*/
	public $AvailableActions;
	public function getAvailableActions() {
		return $this->AvailableActions;
	}
	
	public function setAvailableActions($availableActions) {
		$this->AvailableActions = $availableActions;
		return $this;
	}

	/**
	*Unique identifier of a package.
	*/
	public $Id;
	public function getId() {
		return $this->Id;
	}
	
	public function setId($id) {
		$this->Id = $id;
		return $this;
	}

	/**
	*The package type associated with this physical package. Possible values include Tube, Letter, Pak, Small Box (carrier_box_small), Medium Box (carrier_box_medium), Large Box (carrier_box_large), or Custom.
	*/
	public $PackagingType;
	public function getPackagingType() {
		return $this->PackagingType;
	}
	
	public function setPackagingType($packagingType) {
		$this->PackagingType = $packagingType;
		return $this;
	}

	/**
	*Unique identifier of the shipment associated with this package.
	*/
	public $ShipmentId;
	public function getShipmentId() {
		return $this->ShipmentId;
	}
	
	public function setShipmentId($shipmentId) {
		$this->ShipmentId = $shipmentId;
		return $this;
	}

	/**
	*The code associated with the carrier's shipping method service type. Service type codes include a prefix that indicates the carrier. For example: FEDEX_INTERNATIONAL_STANDARD
	*/
	public $ShippingMethodCode;
	public function getShippingMethodCode() {
		return $this->ShippingMethodCode;
	}
	
	public function setShippingMethodCode($shippingMethodCode) {
		$this->ShippingMethodCode = $shippingMethodCode;
		return $this;
	}

	/**
	*Name of the shipping method associated with the package. For example: UPS Ground or 2nd Day Air.
	*/
	public $ShippingMethodName;
	public function getShippingMethodName() {
		return $this->ShippingMethodName;
	}
	
	public function setShippingMethodName($shippingMethodName) {
		$this->ShippingMethodName = $shippingMethodName;
		return $this;
	}

	/**
	*Status of the package, which is "Shipped" or "Not Shipped".
	*/
	public $Status;
	public function getStatus() {
		return $this->Status;
	}
	
	public function setStatus($status) {
		$this->Status = $status;
		return $this;
	}

	/**
	*Tracking number for the package supplied by the carrier.
	*/
	public $TrackingNumber;
	public function getTrackingNumber() {
		return $this->TrackingNumber;
	}
	
	public function setTrackingNumber($trackingNumber) {
		$this->TrackingNumber = $trackingNumber;
		return $this;
	}

	/**
	*Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
	*/
	public $AuditInfo;
	public function getAuditInfo() {
		return $this->AuditInfo;
	}
	
	public function setAuditInfo($auditInfo) {
		$this->AuditInfo = $auditInfo;
		return $this;
	}

	/**
	*An array list of objects in the returned collection.
	*/
	public $Items;
	public function getItems() {
		return $this->Items;
	}
	
	public function setItems($items) {
		$this->Items = $items;
		return $this;
	}

	/**
	*Dimensional properties of the package.
	*/
	public $Measurements;
	public function getMeasurements() {
		return $this->Measurements;
	}
	
	public function setMeasurements($measurements) {
		$this->Measurements = $measurements;
		return $this;
	}

}

?>
