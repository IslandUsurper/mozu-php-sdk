<?php

/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Urls\Commerce\Catalog\Admin;

use Mozu\Api\MozuUrl;
use Mozu\Api\UrlLocation;

class ProductUrl  {

	/**
		* Get Resource Url for GetProducts
		* @param string $filter "A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - ""filter=IsDisplayed+eq+true"""
		* @param bool $noCount 
		* @param int $pageSize Used to create paged results from a query. Specifies the number of results to display on each page. Maximum: 200.
		* @param string $q A list of product search terms to use in the query when searching across product code and product name. Separate multiple search terms with a space character.
		* @param int $qLimit The maximum number of search results to return in the response. You can limit any range between 1-100.
		* @param string $sortBy 
		* @param int $startIndex 
		* @return string Resource Url
	*/
	public static function getProductsUrl($filter, $noCount, $pageSize, $q, $qLimit, $sortBy, $startIndex)
	{
		$url = "/api/commerce/catalog/admin/products/?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}&q={q}&qLimit={qLimit}&noCount={noCount}";
		$url = MozuUrl::formatUrl($url, "filter", $filter);
		$url = MozuUrl::formatUrl($url, "noCount", $noCount);
		$url = MozuUrl::formatUrl($url, "pageSize", $pageSize);
		$url = MozuUrl::formatUrl($url, "q", $q);
		$url = MozuUrl::formatUrl($url, "qLimit", $qLimit);
		$url = MozuUrl::formatUrl($url, "sortBy", $sortBy);
		$url = MozuUrl::formatUrl($url, "startIndex", $startIndex);
		return new MozuUrl($url, UrlLocation::TENANT_POD,"GET") ;
	}
	
	/**
		* Get Resource Url for GetProduct
		* @param string $productCode Merchant-created code associated with the product such as a SKU. Max length: 30. Accepts a to z, A to Z, Ã‹-Ã˜, 0 to 9, #, semicolon, commas, apostrophes, and Spaces, but no punctuation or other characters.
		* @return string Resource Url
	*/
	public static function getProductUrl($productCode)
	{
		$url = "/api/commerce/catalog/admin/products/{productCode}";
		$url = MozuUrl::formatUrl($url, "productCode", $productCode);
		return new MozuUrl($url, UrlLocation::TENANT_POD,"GET") ;
	}
	
	/**
		* Get Resource Url for GetProductInCatalogs
		* @param string $productCode 
		* @return string Resource Url
	*/
	public static function getProductInCatalogsUrl($productCode)
	{
		$url = "/api/commerce/catalog/admin/products/{productCode}/ProductInCatalogs";
		$url = MozuUrl::formatUrl($url, "productCode", $productCode);
		return new MozuUrl($url, UrlLocation::TENANT_POD,"GET") ;
	}
	
	/**
		* Get Resource Url for GetProductInCatalog
		* @param int $catalogId 
		* @param string $productCode 
		* @return string Resource Url
	*/
	public static function getProductInCatalogUrl($catalogId, $productCode)
	{
		$url = "/api/commerce/catalog/admin/products/{productCode}/ProductInCatalogs/{catalogId}";
		$url = MozuUrl::formatUrl($url, "catalogId", $catalogId);
		$url = MozuUrl::formatUrl($url, "productCode", $productCode);
		return new MozuUrl($url, UrlLocation::TENANT_POD,"GET") ;
	}
	
	/**
		* Get Resource Url for AddProduct
		* @return string Resource Url
	*/
	public static function addProductUrl()
	{
		$url = "/api/commerce/catalog/admin/products/";
		return new MozuUrl($url, UrlLocation::TENANT_POD,"POST") ;
	}
	
	/**
		* Get Resource Url for AddProductInCatalog
		* @param string $productCode 
		* @return string Resource Url
	*/
	public static function addProductInCatalogUrl($productCode)
	{
		$url = "/api/commerce/catalog/admin/products/{productCode}/ProductInCatalogs";
		$url = MozuUrl::formatUrl($url, "productCode", $productCode);
		return new MozuUrl($url, UrlLocation::TENANT_POD,"POST") ;
	}
	
	/**
		* Get Resource Url for UpdateProduct
		* @param string $productCode "Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only."
		* @return string Resource Url
	*/
	public static function updateProductUrl($productCode)
	{
		$url = "/api/commerce/catalog/admin/products/{productCode}";
		$url = MozuUrl::formatUrl($url, "productCode", $productCode);
		return new MozuUrl($url, UrlLocation::TENANT_POD,"PUT") ;
	}
	
	/**
		* Get Resource Url for UpdateProductInCatalogs
		* @param string $productCode 
		* @return string Resource Url
	*/
	public static function updateProductInCatalogsUrl($productCode)
	{
		$url = "/api/commerce/catalog/admin/products/{productCode}/ProductInCatalogs";
		$url = MozuUrl::formatUrl($url, "productCode", $productCode);
		return new MozuUrl($url, UrlLocation::TENANT_POD,"PUT") ;
	}
	
	/**
		* Get Resource Url for UpdateProductInCatalog
		* @param int $catalogId 
		* @param string $productCode 
		* @return string Resource Url
	*/
	public static function updateProductInCatalogUrl($catalogId, $productCode)
	{
		$url = "/api/commerce/catalog/admin/products/{productCode}/ProductInCatalogs/{catalogId}";
		$url = MozuUrl::formatUrl($url, "catalogId", $catalogId);
		$url = MozuUrl::formatUrl($url, "productCode", $productCode);
		return new MozuUrl($url, UrlLocation::TENANT_POD,"PUT") ;
	}
	
	/**
		* Get Resource Url for DeleteProduct
		* @param string $productCode Merchant-created code associated with the product such as a SKU.
		* @return string Resource Url
	*/
	public static function deleteProductUrl($productCode)
	{
		$url = "/api/commerce/catalog/admin/products/{productCode}";
		$url = MozuUrl::formatUrl($url, "productCode", $productCode);
		return new MozuUrl($url, UrlLocation::TENANT_POD,"DELETE") ;
	}
	
	/**
		* Get Resource Url for DeleteProductInCatalog
		* @param int $catalogId 
		* @param string $productCode 
		* @return string Resource Url
	*/
	public static function deleteProductInCatalogUrl($catalogId, $productCode)
	{
		$url = "/api/commerce/catalog/admin/products/{productCode}/ProductInCatalogs/{catalogId}";
		$url = MozuUrl::formatUrl($url, "catalogId", $catalogId);
		$url = MozuUrl::formatUrl($url, "productCode", $productCode);
		return new MozuUrl($url, UrlLocation::TENANT_POD,"DELETE") ;
	}
	
}

?>

