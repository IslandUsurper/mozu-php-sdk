<?php

/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Urls\Commerce\Catalog\Admin;

use Mozu\Api\Urls\BaseUrl;

class ProductReservationUrl extends BaseUrl {

	/**
		* Get Resource Url for GetProductReservations
		* @param string $filter A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"
		* @param int $pageSize Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
		* @param string $sortBy 
		* @param int $startIndex 
		* @return string Resource Url
	*/
	public static function getProductReservationsUrl($filter, $pageSize, $sortBy, $startIndex)
	{
		$url = "/api/commerce/catalog/admin/productreservations/?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}";
		$url = parent::formatUrl($url, "filter", $filter);
		$url = parent::formatUrl($url, "pageSize", $pageSize);
		$url = parent::formatUrl($url, "sortBy", $sortBy);
		$url = parent::formatUrl($url, "startIndex", $startIndex);
		return $url;
	}
	
	/**
		* Get Resource Url for GetProductReservation
		* @param int $productReservationId Unique identifier of the product reservation.
		* @return string Resource Url
	*/
	public static function getProductReservationUrl($productReservationId)
	{
		$url = "/api/commerce/catalog/admin/productreservations/{productReservationId}";
		$url = parent::formatUrl($url, "productReservationId", $productReservationId);
		return $url;
	}
	
	/**
		* Get Resource Url for AddProductReservation
		* @return string Resource Url
	*/
	public static function addProductReservationUrl()
	{
		$url = "/api/commerce/catalog/admin/productreservations/";
		return $url;
	}
	
	/**
		* Get Resource Url for CommitReservation
		* @param int $productReservationId Unique identifier of the reservation.
		* @param int $qty Number of product items to remove from inventory.
		* @return string Resource Url
	*/
	public static function commitReservationUrl($productReservationId, $qty)
	{
		$url = "/api/commerce/catalog/admin/productreservations/{productReservationId}/commit/{qty}";
		$url = parent::formatUrl($url, "productReservationId", $productReservationId);
		$url = parent::formatUrl($url, "qty", $qty);
		return $url;
	}
	
	/**
		* Get Resource Url for UpdateProductReservation
		* @param int $productReservationId Unique identifier of the product reservation to update. 
		* @return string Resource Url
	*/
	public static function updateProductReservationUrl($productReservationId)
	{
		$url = "/api/commerce/catalog/admin/productreservations/{productReservationId}";
		$url = parent::formatUrl($url, "productReservationId", $productReservationId);
		return $url;
	}
	
	/**
		* Get Resource Url for DeleteProductReservation
		* @param int $productReservationId Unique identifier of the reservation.
		* @return string Resource Url
	*/
	public static function deleteProductReservationUrl($productReservationId)
	{
		$url = "/api/commerce/catalog/admin/productreservations/{productReservationId}";
		$url = parent::formatUrl($url, "productReservationId", $productReservationId);
		return $url;
	}
	
}

?>

