<?php

/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Urls\Commerce\Customer\Accounts;

use Mozu\Api\MozuUrl;
use Mozu\Api\UrlLocation;

class CustomerGroupUrl  {

	/**
		* Get Resource Url for GetAccountGroups
		* @param int $accountId Unique identifier of the customer account.
		* @param string $filter "A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - ""filter=IsDisplayed+eq+true"""
		* @param int $pageSize Used to create paged results from a query. Specifies the number of results to display on each page. Maximum: 200.
		* @param string $sortBy 
		* @param int $startIndex 
		* @return string Resource Url
	*/
	public static function getAccountGroupsUrl($accountId, $filter, $pageSize, $sortBy, $startIndex)
	{
		$url = "/api/commerce/customer/accounts/{accountId}/groups/?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}";
		$url = MozuUrl::formatUrl($url, "accountId", $accountId);
		$url = MozuUrl::formatUrl($url, "filter", $filter);
		$url = MozuUrl::formatUrl($url, "pageSize", $pageSize);
		$url = MozuUrl::formatUrl($url, "sortBy", $sortBy);
		$url = MozuUrl::formatUrl($url, "startIndex", $startIndex);
		return new MozuUrl($url, UrlLocation::TENANT_POD,"GET") ;
	}
	
	/**
		* Get Resource Url for GetAccountGroup
		* @param int $accountId Unique identifier of the customer account.
		* @param int $groupId Unique identifier of the customer group.
		* @return string Resource Url
	*/
	public static function getAccountGroupUrl($accountId, $groupId)
	{
		$url = "/api/commerce/customer/accounts/{accountId}/groups/{groupId}";
		$url = MozuUrl::formatUrl($url, "accountId", $accountId);
		$url = MozuUrl::formatUrl($url, "groupId", $groupId);
		return new MozuUrl($url, UrlLocation::TENANT_POD,"GET") ;
	}
	
	/**
		* Get Resource Url for AddAccountGroup
		* @param int $accountId Unique identifier of the customer account to add to a group.
		* @param int $groupId Unique identifier of the customer group to add the customer to.
		* @return string Resource Url
	*/
	public static function addAccountGroupUrl($accountId, $groupId)
	{
		$url = "/api/commerce/customer/accounts/{accountId}/groups/{groupId}";
		$url = MozuUrl::formatUrl($url, "accountId", $accountId);
		$url = MozuUrl::formatUrl($url, "groupId", $groupId);
		return new MozuUrl($url, UrlLocation::TENANT_POD,"POST") ;
	}
	
	/**
		* Get Resource Url for DeleteAccountGroup
		* @param int $accountId Unique identifier of the customer account to remove from the group.
		* @param int $groupId Unique identifier of the customer group.
		* @return string Resource Url
	*/
	public static function deleteAccountGroupUrl($accountId, $groupId)
	{
		$url = "/api/commerce/customer/accounts/{accountId}/groups/{groupId}";
		$url = MozuUrl::formatUrl($url, "accountId", $accountId);
		$url = MozuUrl::formatUrl($url, "groupId", $groupId);
		return new MozuUrl($url, UrlLocation::TENANT_POD,"DELETE") ;
	}
	
}

?>

