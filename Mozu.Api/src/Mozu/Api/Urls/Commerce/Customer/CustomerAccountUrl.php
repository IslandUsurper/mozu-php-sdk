<?php

/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Urls\Commerce\Customer;

use Mozu\Api\MozuUrl;
use Mozu\Api\UrlLocation;

class CustomerAccountUrl  {

	/**
		* Get Resource Url for GetAccounts
		* @param string $fields The fields to include in the response.
		* @param string $filter A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"
		* @param int $pageSize 
		* @param string $q A list of customer account search terms to use in the query when searching across customer name and email. Separate multiple search terms with a space character.
		* @param int $qLimit The maximum number of search results to return in the response. You can limit any range between 1-100.
		* @param string $sortBy 
		* @param int $startIndex 
		* @return string Resource Url
	*/
	public static function getAccountsUrl($fields, $filter, $pageSize, $q, $qLimit, $sortBy, $startIndex)
	{
		$url = "/api/commerce/customer/accounts/?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}&fields={fields}&q={q}&qLimit={qLimit}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("fields", $fields);
		$url = $mozuUrl->formatUrl("filter", $filter);
		$url = $mozuUrl->formatUrl("pageSize", $pageSize);
		$url = $mozuUrl->formatUrl("q", $q);
		$url = $mozuUrl->formatUrl("qLimit", $qLimit);
		$url = $mozuUrl->formatUrl("sortBy", $sortBy);
		$url = $mozuUrl->formatUrl("startIndex", $startIndex);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for GetAccount
		* @param int $accountId Unique identifier of the customer account to retrieve.
		* @return string Resource Url
	*/
	public static function getAccountUrl($accountId)
	{
		$url = "/api/commerce/customer/accounts/{accountId}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("accountId", $accountId);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for GetLoginState
		* @param int $accountId 
		* @return string Resource Url
	*/
	public static function getLoginStateUrl($accountId)
	{
		$url = "/api/commerce/customer/accounts/{accountId}/loginstate";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("accountId", $accountId);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for GetLoginStateByEmailAddress
		* @param string $emailAddress 
		* @return string Resource Url
	*/
	public static function getLoginStateByEmailAddressUrl($emailAddress)
	{
		$url = "/api/commerce/customer/accounts/loginstate?emailAddress={emailAddress}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("emailAddress", $emailAddress);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for GetLoginStateByUserName
		* @param string $userName 
		* @return string Resource Url
	*/
	public static function getLoginStateByUserNameUrl($userName)
	{
		$url = "/api/commerce/customer/accounts/loginstate?userName={userName}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("userName", $userName);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for AddAccount
		* @return string Resource Url
	*/
	public static function addAccountUrl()
	{
		$url = "/api/commerce/customer/accounts/";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for AddLoginToExistingCustomer
		* @param int $accountId 
		* @return string Resource Url
	*/
	public static function addLoginToExistingCustomerUrl($accountId)
	{
		$url = "/api/commerce/customer/accounts/{accountId}/Create-Login";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		$url = $mozuUrl->formatUrl("accountId", $accountId);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for RecomputeCustomerLifetimeValue
		* @param int $accountId 
		* @return string Resource Url
	*/
	public static function recomputeCustomerLifetimeValueUrl($accountId)
	{
		$url = "/api/commerce/customer/accounts/{accountId}/recomputelifetimevalue";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		$url = $mozuUrl->formatUrl("accountId", $accountId);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for SetLoginLocked
		* @param int $accountId 
		* @return string Resource Url
	*/
	public static function setLoginLockedUrl($accountId)
	{
		$url = "/api/commerce/customer/accounts/{accountId}/Set-Login-Locked";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		$url = $mozuUrl->formatUrl("accountId", $accountId);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for SetPasswordChangeRequired
		* @param int $accountId 
		* @return string Resource Url
	*/
	public static function setPasswordChangeRequiredUrl($accountId)
	{
		$url = "/api/commerce/customer/accounts/{accountId}/Set-Password-Change-Required";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		$url = $mozuUrl->formatUrl("accountId", $accountId);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for AddAccountAndLogin
		* @return string Resource Url
	*/
	public static function addAccountAndLoginUrl()
	{
		$url = "/api/commerce/customer/accounts/Add-Account-And-Login";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for AddAccounts
		* @return string Resource Url
	*/
	public static function addAccountsUrl()
	{
		$url = "/api/commerce/customer/accounts/Bulk";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for ResetPassword
		* @return string Resource Url
	*/
	public static function resetPasswordUrl()
	{
		$url = "/api/commerce/customer/accounts/Reset-Password";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for UpdateAccount
		* @param int $accountId Unique identifier of the customer account.
		* @return string Resource Url
	*/
	public static function updateAccountUrl($accountId)
	{
		$url = "/api/commerce/customer/accounts/{accountId}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"PUT", false) ;
		$url = $mozuUrl->formatUrl("accountId", $accountId);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for DeleteAccount
		* @param int $accountId Unique identifier of the customer account to delete.
		* @return string Resource Url
	*/
	public static function deleteAccountUrl($accountId)
	{
		$url = "/api/commerce/customer/accounts/{accountId}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"DELETE", false) ;
		$url = $mozuUrl->formatUrl("accountId", $accountId);
		return $mozuUrl;
	}
	
}

?>

