<?php

/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Urls\Commerce\Customer;

use Mozu\Api\MozuUrl;
use Mozu\Api\UrlLocation;

class CustomerGroupUrl  {

	/**
		* Get Resource Url for GetGroups
		* @param string $filter "A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - ""filter=IsDisplayed+eq+true"""
		* @param int $pageSize Used to create paged results from a query. Specifies the number of results to display on each page. Maximum: 200.
		* @param string $sortBy "The property by which to sort results and whether the results appear in ascending (a-z) order, represented by 'ASC' or in descending (z-a) order, represented by 'DESC'. The sortBy parameter follows an available property. <b>For example: sortBy=productCode+asc</b>"
		* @param int $startIndex "Used to create paged results from a query. Indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3."
		* @return string Resource Url
	*/
	public static function getGroupsUrl($filter, $pageSize, $sortBy, $startIndex)
	{
		$url = "/api/commerce/customer/groups/?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}";
		$url = MozuUrl::formatUrl($url, "filter", $filter);
		$url = MozuUrl::formatUrl($url, "pageSize", $pageSize);
		$url = MozuUrl::formatUrl($url, "sortBy", $sortBy);
		$url = MozuUrl::formatUrl($url, "startIndex", $startIndex);
		return new MozuUrl($url, UrlLocation::TENANT_POD,"GET") ;
	}
	
	/**
		* Get Resource Url for GetGroup
		* @param int $groupId Identifier of the customer group to retrieve.
		* @return string Resource Url
	*/
	public static function getGroupUrl($groupId)
	{
		$url = "/api/commerce/customer/groups/{groupId}";
		$url = MozuUrl::formatUrl($url, "groupId", $groupId);
		return new MozuUrl($url, UrlLocation::TENANT_POD,"GET") ;
	}
	
	/**
		* Get Resource Url for AddGroup
		* @return string Resource Url
	*/
	public static function addGroupUrl()
	{
		$url = "/api/commerce/customer/groups/";
		return new MozuUrl($url, UrlLocation::TENANT_POD,"POST") ;
	}
	
	/**
		* Get Resource Url for UpdateGroup
		* @param int $groupId Identifier of the customer group to update.
		* @return string Resource Url
	*/
	public static function updateGroupUrl($groupId)
	{
		$url = "/api/commerce/customer/groups/{groupId}";
		$url = MozuUrl::formatUrl($url, "groupId", $groupId);
		return new MozuUrl($url, UrlLocation::TENANT_POD,"PUT") ;
	}
	
	/**
		* Get Resource Url for DeleteGroup
		* @param int $groupId Identifier of the customer group to delete.
		* @return string Resource Url
	*/
	public static function deleteGroupUrl($groupId)
	{
		$url = "/api/commerce/customer/groups/{groupId}";
		$url = MozuUrl::formatUrl($url, "groupId", $groupId);
		return new MozuUrl($url, UrlLocation::TENANT_POD,"DELETE") ;
	}
	
}

?>

