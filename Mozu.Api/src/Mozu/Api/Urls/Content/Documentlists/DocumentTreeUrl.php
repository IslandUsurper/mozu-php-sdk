<?php

/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Urls\Content\Documentlists;

use Mozu\Api\MozuUrl;
use Mozu\Api\UrlLocation;

class DocumentTreeUrl  {

	/**
		* Get Resource Url for GetTreeDocumentContent
		* @param string $documentListName The name of the document list associated with the document.
		* @param string $documentName The name of the document, which is unique within its folder.
		* @param string $folderId If applicable, the unique identifier of the folder that contains the document.
		* @param string $folderPath If applicable, the path of the folder hierarchy location associated with the document.
		* @return string Resource Url
	*/
	public static function getTreeDocumentContentUrl($documentListName, $documentName, $folderId, $folderPath)
	{
		$url = "/api/content/documentlists/{documentListName}/documentTree/{documentName}/content?folderPath={folderPath}&folderId={folderId}";
		$url = MozuUrl::formatUrl($url, "documentListName", $documentListName);
		$url = MozuUrl::formatUrl($url, "documentName", $documentName);
		$url = MozuUrl::formatUrl($url, "folderId", $folderId);
		$url = MozuUrl::formatUrl($url, "folderPath", $folderPath);
		return new MozuUrl($url, UrlLocation::TENANT_POD,"GET") ;
	}
	
	/**
		* Get Resource Url for GetTreeDocument
		* @param string $documentListName The name of the document list associated with the document.
		* @param string $documentName The name of the document, which is unique within its folder.
		* @param string $folderId If applicable, the unique identifier of the folder that contains the document.
		* @param string $folderPath If applicable, the path of the folder hierarchy location that contains the document.
		* @return string Resource Url
	*/
	public static function getTreeDocumentUrl($documentListName, $documentName, $folderId, $folderPath)
	{
		$url = "/api/content/documentlists/{documentListName}/documentTree/{documentName}?folderPath={folderPath}&folderId={folderId}";
		$url = MozuUrl::formatUrl($url, "documentListName", $documentListName);
		$url = MozuUrl::formatUrl($url, "documentName", $documentName);
		$url = MozuUrl::formatUrl($url, "folderId", $folderId);
		$url = MozuUrl::formatUrl($url, "folderPath", $folderPath);
		return new MozuUrl($url, UrlLocation::TENANT_POD,"GET") ;
	}
	
	/**
		* Get Resource Url for UpdateTreeDocumentContent
		* @param string $documentListName The name of the document list associated with the document.
		* @param string $documentName The name of the document, which is unique within its folder.
		* @param string $folderId If applicable, the unique identifier of the folder that contains the document.
		* @param string $folderPath If applicable, the path of the folder hierarchy location associated with the document.
		* @return string Resource Url
	*/
	public static function updateTreeDocumentContentUrl($documentListName, $documentName, $folderId, $folderPath)
	{
		$url = "/api/content/documentlists/{documentListName}/documentTree/{documentName}/content?folderPath={folderPath}&folderId={folderId}";
		$url = MozuUrl::formatUrl($url, "documentListName", $documentListName);
		$url = MozuUrl::formatUrl($url, "documentName", $documentName);
		$url = MozuUrl::formatUrl($url, "folderId", $folderId);
		$url = MozuUrl::formatUrl($url, "folderPath", $folderPath);
		return new MozuUrl($url, UrlLocation::TENANT_POD,"PUT") ;
	}
	
	/**
		* Get Resource Url for DeleteTreeDocumentContent
		* @param string $documentListName The name of the document list associated with the document.
		* @param string $documentName The name of the document, which is unique within its folder.
		* @param string $folderId If applicable, the unique identifier of the folder that contains the document.
		* @param string $folderPath If applicable, the path of the folder hierarchy location associated with the document.
		* @return string Resource Url
	*/
	public static function deleteTreeDocumentContentUrl($documentListName, $documentName, $folderId, $folderPath)
	{
		$url = "/api/content/documentlists/{documentListName}/documentTree/{documentName}/content?folderPath={folderPath}&folderId={folderId}";
		$url = MozuUrl::formatUrl($url, "documentListName", $documentListName);
		$url = MozuUrl::formatUrl($url, "documentName", $documentName);
		$url = MozuUrl::formatUrl($url, "folderId", $folderId);
		$url = MozuUrl::formatUrl($url, "folderPath", $folderPath);
		return new MozuUrl($url, UrlLocation::TENANT_POD,"DELETE") ;
	}
	
}

?>

