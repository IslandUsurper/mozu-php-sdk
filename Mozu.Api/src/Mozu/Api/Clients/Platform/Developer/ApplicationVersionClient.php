<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Platform\Developer;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Platform\Developer\ApplicationVersionUrl;

/**
* 
*/
class ApplicationVersionClient {

	/**
	* 
	*
	* @return MozuClient
	*/
	public static function getAllApplicationsClient(Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ApplicationVersionUrl::getAllApplicationsUrl();
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $applicationId 
	* @return MozuClient
	*/
	public static function getApplicationClient($applicationId =  null, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ApplicationVersionUrl::getApplicationUrl($applicationId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $applicationVersionId 
	* @return MozuClient
	*/
	public static function getApplicationVersionClient( $applicationVersionId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ApplicationVersionUrl::getApplicationVersionUrl($applicationVersionId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $applicationVersionId 
	* @return MozuClient
	*/
	public static function getPackagesClient( $applicationVersionId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ApplicationVersionUrl::getPackagesUrl($applicationVersionId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $applicationVersionId 
	* @param int $packageId 
	* @return MozuClient
	*/
	public static function getPackageClient( $applicationVersionId,  $packageId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ApplicationVersionUrl::getPackageUrl($applicationVersionId, $packageId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $applicationVersionId 
	* @param int $packageId 
	* @return MozuClient
	*/
	public static function getPackageItemsMetadataClient( $applicationVersionId,  $packageId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ApplicationVersionUrl::getPackageItemsMetadataUrl($applicationVersionId, $packageId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $applicationVersionId 
	* @param string $itempath 
	* @param int $packageId 
	* @return MozuClient
	*/
	public static function getPackageItemMetadataClient( $applicationVersionId,  $itempath,  $packageId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ApplicationVersionUrl::getPackageItemMetadataUrl($applicationVersionId, $itempath, $packageId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $applicationVersionId 
	* @param int $packageId 
	*/
	public static function getPackageFilesZipClient( $applicationVersionId,  $packageId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ApplicationVersionUrl::getPackageFilesZipUrl($applicationVersionId, $packageId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $applicationVersionId 
	* @param Package $package 
	* @return MozuClient
	*/
	public static function addPackageClient($pkg,  $applicationVersionId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ApplicationVersionUrl::addPackageUrl($applicationVersionId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($pkg);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $applicationVersionId 
	* @param string $filepath 
	* @param int $packageId 
	* @param Stream $stream 
	* @return MozuClient
	*/
	public static function addPackageFileClient($stream,  $applicationVersionId,  $filepath,  $packageId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ApplicationVersionUrl::addPackageFileUrl($applicationVersionId, $filepath, $packageId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($stream);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $applicationVersionId 
	* @param int $packageId 
	* @param RenameInfo $renameInfo 
	* @return MozuClient
	*/
	public static function changePackageFileNameOrPathClient($renameInfo,  $applicationVersionId,  $packageId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ApplicationVersionUrl::changePackageFileNameOrPathUrl($applicationVersionId, $packageId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($renameInfo);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $applicationVersionId 
	* @param string $filepath 
	* @param int $packageId 
	* @param Stream $stream 
	* @return MozuClient
	*/
	public static function updatePackageFileClient($stream,  $applicationVersionId,  $filepath,  $packageId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ApplicationVersionUrl::updatePackageFileUrl($applicationVersionId, $filepath, $packageId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($stream);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $applicationVersionId 
	* @param string $filepath 
	* @param int $packageId 
	*/
	public static function deletePackageFileClient( $applicationVersionId,  $filepath,  $packageId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ApplicationVersionUrl::deletePackageFileUrl($applicationVersionId, $filepath, $packageId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	
}

?>

