<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce\Catalog\Admin;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\Catalog\Admin\FacetUrl;

/**
* Use the Facets resource to manage the facets shoppers use to filter product display results on a storefront. Facets can include categories, product attributes, or prices, and use either a range of values or discrete values.
*/
class FacetClient {

	/**
	* Retrieves a facet specified by its unique identifier and displays its properties.
	*
	* @param int $facetId Unique identifier of the facet to retrieve.
	* @param bool $validate Validates that the product category associated with a facet is active. System-supplied and read only.
	* @return MozuClient
	*/
	public static function getFacetClient($facetId, $validate)
	{
		$url = FacetUrl::getFacetUrl($facetId, $validate);
		$verb = "GET";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* Retrieves a list of the facets defined for the specified category.
	*
	* @param int $categoryId Unique identifier of the category associated with the facets to retrieve.
	* @param bool $includeAvailable If true, returns a list of the attributes and categories associated with a product type that have not been defined as a facet for the category.
	* @param bool $validate Validates that the product category associated with a facet is active. System-supplied and read only.
	* @return MozuClient
	*/
	public static function getFacetCategoryListClient($categoryId, $includeAvailable, $validate)
	{
		$url = FacetUrl::getFacetCategoryListUrl($categoryId, $includeAvailable, $validate);
		$verb = "GET";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* Creates a new category, price, or attribute facet. Supply the category or attribute source to use for the facet values.
	*
	* @param Facet $facet Properties of the new facet to create. Required properties: Source, FacetType, IsHidden, and CategoryId.
	* @return MozuClient
	*/
	public static function addFacetClient($facet)
	{
		$url = FacetUrl::addFacetUrl();
		$verb = "POST";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url)->withBody($facet);
		return $mozuClient;

	}
	
	/**
	* Modifies one or more properties of a defined facet.
	*
	* @param int $facetId Unique identifier of the facet to modify.
	* @param Facet $facet Properties of the defined facet to modify. Required properties: Source, FacetType, IsHidden, and CategoryId.
	* @return MozuClient
	*/
	public static function updateFacetClient($facetId, $facet)
	{
		$url = FacetUrl::updateFacetUrl($facetId);
		$verb = "PUT";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url)->withBody($facet);
		return $mozuClient;

	}
	
	/**
	* Deletes the facet specified by its unique identifier.
	*
	* @param int $facetId Unique identifier of the facet to delete.
	*/
	public static function deleteFacetByIdClient($facetId)
	{
		$url = FacetUrl::deleteFacetByIdUrl($facetId);
		$verb = "DELETE";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url);
		return $mozuClient;

	}
	
	
}

?>

