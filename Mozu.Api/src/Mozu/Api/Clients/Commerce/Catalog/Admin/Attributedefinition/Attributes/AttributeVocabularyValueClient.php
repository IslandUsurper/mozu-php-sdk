<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce\Catalog\Admin\Attributedefinition\Attributes;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\Catalog\Admin\Attributedefinition\Attributes\AttributeVocabularyValueUrl;

/**
* Vocabulary values are predefined for an attribute.
*/
class AttributeVocabularyValueClient {

	/**
	* Retrieves a list of attribute vocabulary values. To target a query, use one or several valid optional response groups.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @return MozuClient
	*/
	public static function getAttributeVocabularyValuesClient($attributeFQN)
	{
		$url = AttributeVocabularyValueUrl::getAttributeVocabularyValuesUrl($attributeFQN);
		$verb = "GET";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* Retrieves an attribute vocabulary value by providing the attribute FQN and value.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param string $value The actual unique value of the attribute vocabulary to retrieve. A single attribute must have a unique value and match the attribute's data type. If a string value returns null, the system will generate a value. The actual string content displayed shoud be stored as "Content" and actual content is required for string values.
	* @return MozuClient
	*/
	public static function getAttributeVocabularyValueClient($attributeFQN, $value)
	{
		$url = AttributeVocabularyValueUrl::getAttributeVocabularyValueUrl($attributeFQN, $value);
		$verb = "GET";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* Adds a new attribute vocabulary value.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param AttributeVocabularyValue $attributeVocabularyValue The predefined vocabulary value to add to the attribute content.
	* @return MozuClient
	*/
	public static function addAttributeVocabularyValueClient($attributeFQN, $attributeVocabularyValue)
	{
		$url = AttributeVocabularyValueUrl::addAttributeVocabularyValueUrl($attributeFQN);
		$verb = "POST";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url)->withBody($attributeVocabularyValue);
		return $mozuClient;

	}
	
	/**
	* Update existing vocabulary values for an attribute.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param array|AttributeVocabularyValue $vocabularyValues The actual vocabulary values for the attribute being updated.
	* @return MozuClient
	*/
	public static function updateAttributeVocabularyValuesClient($attributeFQN, $vocabularyValues)
	{
		$url = AttributeVocabularyValueUrl::updateAttributeVocabularyValuesUrl($attributeFQN);
		$verb = "PUT";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url)->withBody($vocabularyValues);
		return $mozuClient;

	}
	
	/**
	* Updates existing attribute vocabulary values.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param string $value The actual unique value of the attribute vocabulary value to update. A single attribute must have a unique value and match the attribute's data type. If a string value returns null, the system will generate a value. The actual string content displayed shoud be stored as "Content" and actual content is required for string values.
	* @param AttributeVocabularyValue $attributeVocabularyValue The predefined vocabulary value to add to the attribute content to update.
	* @return MozuClient
	*/
	public static function updateAttributeVocabularyValueClient($attributeFQN, $value, $attributeVocabularyValue)
	{
		$url = AttributeVocabularyValueUrl::updateAttributeVocabularyValueUrl($attributeFQN, $value);
		$verb = "PUT";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url)->withBody($attributeVocabularyValue);
		return $mozuClient;

	}
	
	/**
	* Deletes an attribute's vocabulary value.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param string $value The actual unique value of the attribute vocabulary to delete. A single attribute must have a unique value and match the attribute's data type. If a string value returns null, the system will generate a value. The actual string content displayed shoud be stored as "Content" and actual content is required for string values.
	*/
	public static function deleteAttributeVocabularyValueClient($attributeFQN, $value)
	{
		$url = AttributeVocabularyValueUrl::deleteAttributeVocabularyValueUrl($attributeFQN, $value);
		$verb = "DELETE";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url);
		return $mozuClient;

	}
	
	
}

?>

