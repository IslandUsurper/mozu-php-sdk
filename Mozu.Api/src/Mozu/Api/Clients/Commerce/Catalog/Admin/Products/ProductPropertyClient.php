<?php


/**
* <auto-generated>
*     This code was generated by a Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce\Catalog\Admin\Products;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\Catalog\Admin\Products\ProductPropertyUrl;
use Mozu\Api\DataViewMode;
use Mozu\Api\Headers;

/**
* Use the Properties resource to configure a property attribute for an individual product associated with a product type that uses the property attribute, as well as set property values for the product.
*/
class ProductPropertyClient {

	/**
	* Retrieves a list of the property attributes configured for the product specified in the request.
	*
	* @param string $productCode 
	* @return MozuClient
	*/
	public static function getPropertiesClient($dataViewMode, $productCode)
	{
		$url = ProductPropertyUrl::getPropertiesUrl($productCode);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);
		return $mozuClient;

	}
	
	/**
	* Retrieves the details of a property attribute configuration for the product specified in the request.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param string $productCode 
	* @return MozuClient
	*/
	public static function getPropertyClient($dataViewMode, $productCode, $attributeFQN)
	{
		$url = ProductPropertyUrl::getPropertyUrl($attributeFQN, $productCode);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);
		return $mozuClient;

	}
	
	/**
	* Configures a property attribute for the product specified in the request.
	*
	* @param string $productCode 
	* @param ProductProperty $productProperty Properties of the property attribute to configure for a product.
	* @return MozuClient
	*/
	public static function addPropertyClient($dataViewMode, $productProperty, $productCode)
	{
		$url = ProductPropertyUrl::addPropertyUrl($productCode);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($productProperty)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);
		return $mozuClient;

	}
	
	/**
	* Update one or more details of a property attribute configuration for the product specified in the request.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param string $productCode 
	* @param ProductProperty $productProperty Details of the property attribute to update for the product configuration.
	* @return MozuClient
	*/
	public static function updatePropertyClient($dataViewMode, $productProperty, $productCode, $attributeFQN)
	{
		$url = ProductPropertyUrl::updatePropertyUrl($attributeFQN, $productCode);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($productProperty)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);
		return $mozuClient;

	}
	
	/**
	* Deletes the configuration of a property attribute for the product specified in the request.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param string $productCode 
	*/
	public static function deletePropertyClient($dataViewMode, $productCode, $attributeFQN)
	{
		$url = ProductPropertyUrl::deletePropertyUrl($attributeFQN, $productCode);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);
		return $mozuClient;

	}
	
	
}

?>

