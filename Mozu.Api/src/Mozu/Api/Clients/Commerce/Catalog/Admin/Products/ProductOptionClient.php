<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce\Catalog\Admin\Products;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\Catalog\Admin\Products\ProductOptionUrl;

/**
* Query, create, and update product options.
*/
class ProductOptionClient {

	/**
	* Retrieves a list of all option attributes configured for the product specified in the request.
	*
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @return MozuClient
	*/
	public static function getOptionsClient($productCode)
	{
		$url = ProductOptionUrl::getOptionsUrl($productCode);
		$verb = "GET";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* Retrieves the catalog option by providing the product type ID and the attribute's fully qualified name.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @return MozuClient
	*/
	public static function getOptionClient($attributeFQN, $productCode)
	{
		$url = ProductOptionUrl::getOptionUrl($attributeFQN, $productCode);
		$verb = "GET";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* Adds or creates a product option.
	*
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param ProductOption $productOption The product option being added or created.
	* @return MozuClient
	*/
	public static function addOptionClient($productCode, $productOption)
	{
		$url = ProductOptionUrl::addOptionUrl($productCode);
		$verb = "POST";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url)->withBody($productOption);
		return $mozuClient;

	}
	
	/**
	* Updates a product option by providing the product type ID and the attribute's fully qualified name. There is also a request body to supply additional information.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param ProductOption $productOption The product option being updated.
	* @return MozuClient
	*/
	public static function updateOptionClient($attributeFQN, $productCode, $productOption)
	{
		$url = ProductOptionUrl::updateOptionUrl($attributeFQN, $productCode);
		$verb = "PUT";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url)->withBody($productOption);
		return $mozuClient;

	}
	
	/**
	* Deletes the catalog option by providing the product type ID and the attribute's fully qualified name.
	*
	* @param string $attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	*/
	public static function deleteOptionClient($attributeFQN, $productCode)
	{
		$url = ProductOptionUrl::deleteOptionUrl($attributeFQN, $productCode);
		$verb = "DELETE";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url);
		return $mozuClient;

	}
	
	
}

?>

