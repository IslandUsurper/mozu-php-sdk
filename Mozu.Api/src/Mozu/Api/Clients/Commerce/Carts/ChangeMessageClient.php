<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce\Carts;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\Carts\ChangeMessageUrl;
use Mozu\Api\DataViewMode;
use Mozu\Api\Headers;

/**
* Use the Cart Messages resource to retrieve messages for live carts that the system logs when a product's price or inventory level changes.
*/
class ChangeMessageClient {

	/**
	* Retrieves the messages associated with the current shopper's cart.
	*
	* @return MozuClient
	*/
	public static function getMessagesClient(Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ChangeMessageUrl::getMessagesUrl();
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* Deletes all messages associated with the cart of the current shopper.
	*
	*/
	public static function removeAllMessagesClient(Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ChangeMessageUrl::removeAllMessagesUrl();
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* Removes a single message associated with the cart of the current shopper.
	*
	* @param string $messageId Identifier of the message to remove from the cart.
	*/
	public static function removeMessageClient($messageId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ChangeMessageUrl::removeMessageUrl($messageId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	
}

?>

