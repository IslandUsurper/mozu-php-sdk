<?php


/**
* <auto-generated>
*     This code was generated by a Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\ChannelGroupUrl;
use Mozu\Api\DataViewMode;
use Mozu\Api\Headers;

/**
* Use the Channel Groups resource to manage groups of channels with common information.
*/
class ChannelGroupClient {

	/**
	* Retrieves a list of defined channel groups according to any filter and sort criteria specified in the request.
	*
	* @param string $filter FilterSetAll
	* @param int $pageSize The number of results to display on each page when creating paged results from a query. The maximum value is 200.
	* @param string $sortBy The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"
	* @param int $startIndex When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
	* @return MozuClient
	*/
	public static function getChannelGroupsClient($startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null)
	{
		$url = ChannelGroupUrl::getChannelGroupsUrl($filter, $pageSize, $sortBy, $startIndex);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* Retrieves the details of a defined channel group.
	*
	* @param string $code The code that uniquely identifies the channel group.
	* @return MozuClient
	*/
	public static function getChannelGroupClient($code)
	{
		$url = ChannelGroupUrl::getChannelGroupUrl($code);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* Creates a new group of channels with common information.
	*
	* @param ChannelGroup $channelGroup Properties of the channel group to create.
	* @return MozuClient
	*/
	public static function createChannelGroupClient($channelGroup)
	{
		$url = ChannelGroupUrl::createChannelGroupUrl();
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($channelGroup);
		return $mozuClient;

	}
	
	/**
	* Updates one or more properties of a defined channel group.
	*
	* @param string $code Code that identifies the channel group.
	* @param ChannelGroup $channelGroup Properties of the channel group to update.
	* @return MozuClient
	*/
	public static function updateChannelGroupClient($channelGroup, $code)
	{
		$url = ChannelGroupUrl::updateChannelGroupUrl($code);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($channelGroup);
		return $mozuClient;

	}
	
	/**
	* Deletes a defined group of channels, which removes the group association with each channel in the group but does not delete the channel definitions themselves.
	*
	* @param string $code User-defined code that uniqely identifies the channel group.
	*/
	public static function deleteChannelGroupClient($code)
	{
		$url = ChannelGroupUrl::deleteChannelGroupUrl($code);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	
}

?>

