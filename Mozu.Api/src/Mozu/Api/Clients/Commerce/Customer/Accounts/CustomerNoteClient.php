<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce\Customer\Accounts;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\Customer\Accounts\CustomerNoteUrl;

/**
* Merchants can add and view internal notes for a customer account. For example, a merchant can track a customer's interests or complaints. Only merchants can add and view notes. Customers cannot see these notes from their My Account page.
*/
class CustomerNoteClient {

	/**
	* Retrieves the contents of a particular note attached to a specified customer account.
	*
	* @param int $accountId Unique identifier of the customer account that contains the note being retrieved.
	* @param int $noteId Unique identifier of a particular note to retrieve.
	* @return MozuClient
	*/
	public static function getAccountNoteClient($accountId, $noteId)
	{
		$url = CustomerNoteUrl::getAccountNoteUrl($accountId, $noteId);
		$verb = "GET";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* Retrieves a list of notes added to a customer account according to any specified filter criteria and sort options.
	*
	* @param int $accountId Unique identifier of the customer account.
	* @param string $filter A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"
	* @param int $pageSize Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
	* @param string $sortBy The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"
	* @param int $startIndex Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
	* @return MozuClient
	*/
	public static function getAccountNotesClient($accountId, $filter, $pageSize, $sortBy, $startIndex)
	{
		$url = CustomerNoteUrl::getAccountNotesUrl($accountId, $filter, $pageSize, $sortBy, $startIndex);
		$verb = "GET";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* Adds a new note to the specified customer account.
	*
	* @param int $accountId Unique identifier of the customer account for which to create the note.
	* @param CustomerNote $customerNote Contents of the new note.
	* @return MozuClient
	*/
	public static function addAccountNoteClient($accountId, $customerNote)
	{
		$url = CustomerNoteUrl::addAccountNoteUrl($accountId);
		$verb = "POST";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url)->withBody($customerNote);
		return $mozuClient;

	}
	
	/**
	* Modifies an existing note for a customer account.
	*
	* @param int $accountId Unique identifier of the customer account note to modify.
	* @param int $noteId Unique identifier of the note to update.
	* @param CustomerNote $note The new content to replace the existing note.
	* @return MozuClient
	*/
	public static function updateAccountNoteClient($accountId, $noteId, $note)
	{
		$url = CustomerNoteUrl::updateAccountNoteUrl($accountId, $noteId);
		$verb = "PUT";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url)->withBody($note);
		return $mozuClient;

	}
	
	/**
	* Removes a note from the specified customer account.
	*
	* @param int $accountId Unique identifier of the customer account that contains the note being deleted.
	* @param int $noteId Unique identifier of the customer account note being deleted.
	*/
	public static function deleteAccountNoteClient($accountId, $noteId)
	{
		$url = CustomerNoteUrl::deleteAccountNoteUrl($accountId, $noteId);
		$verb = "DELETE";
		$mozuClient = new MozuClient();
		$mozuClient->withVerb($verb)
				->withResourceUrl($url);
		return $mozuClient;

	}
	
	
}

?>

