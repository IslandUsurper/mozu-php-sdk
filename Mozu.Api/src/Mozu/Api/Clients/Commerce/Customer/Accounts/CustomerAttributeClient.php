<?php


/**
* <auto-generated>
*     This code was generated by a Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce\Customer\Accounts;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\Customer\Accounts\CustomerAttributeUrl;
use Mozu\Api\DataViewMode;
use Mozu\Api\Headers;

/**
* Use the Attributes subresource to manage the attributes used to uniquely identify shopper accounts, such as gender or age.
*/
class CustomerAttributeClient {

	/**
	* Retrieves the contents of an attribute associated with the specified customer account.
	*
	* @param int $accountId Identifier of the customer account associated with the attribute to retrieve.
	* @param string $attributeFQN 
	* @return MozuClient
	*/
	public static function getAccountAttributeClient($accountId, $attributeFQN)
	{
		$url = CustomerAttributeUrl::getAccountAttributeUrl($accountId, $attributeFQN);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* Retrieves the list of customer account attributes.
	*
	* @param int $accountId Identifier of the customer account associated with the attributes to retrieve.
	* @param string $filter 
	* @param int $pageSize 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return MozuClient
	*/
	public static function getAccountAttributesClient($accountId, $startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null)
	{
		$url = CustomerAttributeUrl::getAccountAttributesUrl($accountId, $filter, $pageSize, $sortBy, $startIndex);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* Applies a defined attribute to the customer account specified in the request and assigns a value to the customer attribute.
	*
	* @param int $accountId Unique identifier of the customer account.
	* @param CustomerAttribute $attribute 
	* @return MozuClient
	*/
	public static function addAccountAttributeClient($attribute, $accountId)
	{
		$url = CustomerAttributeUrl::addAccountAttributeUrl($accountId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($attribute);
		return $mozuClient;

	}
	
	/**
	* Updates one or more details of a customer account attribute.
	*
	* @param int $accountId Identifier of the customer account associated with the attribute.
	* @param string $attributeFQN 
	* @param CustomerAttribute $attribute 
	* @return MozuClient
	*/
	public static function updateAccountAttributeClient($attribute, $accountId, $attributeFQN)
	{
		$url = CustomerAttributeUrl::updateAccountAttributeUrl($accountId, $attributeFQN);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($attribute);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $accountId 
	* @param string $attributeFQN 
	*/
	public static function deleteAccountAttributeClient($accountId, $attributeFQN)
	{
		$url = CustomerAttributeUrl::deleteAccountAttributeUrl($accountId, $attributeFQN);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	
}

?>

