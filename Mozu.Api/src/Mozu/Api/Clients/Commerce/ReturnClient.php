<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\ReturnUrl;

/**
* 
*/
class ReturnClient {

	/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return MozuClient
	*/
	public static function getReturnsClient($filter =  null, $pageSize =  null, $sortBy =  null, $startIndex =  null, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ReturnUrl::getReturnsUrl($filter, $pageSize, $sortBy, $startIndex);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $returnId 
	* @return MozuClient
	*/
	public static function getReturnClient( $returnId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ReturnUrl::getReturnUrl($returnId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $returnId 
	* @return MozuClient
	*/
	public static function getAvailableReturnActionsClient( $returnId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ReturnUrl::getAvailableReturnActionsUrl($returnId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $returnId 
	* @return MozuClient
	*/
	public static function getPaymentsClient( $returnId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ReturnUrl::getPaymentsUrl($returnId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $paymentId 
	* @param string $returnId 
	* @return MozuClient
	*/
	public static function getPaymentClient( $paymentId,  $returnId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ReturnUrl::getPaymentUrl($paymentId, $returnId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $paymentId 
	* @param string $returnId 
	* @return MozuClient
	*/
	public static function getAvailablePaymentActionsForReturnClient( $paymentId,  $returnId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ReturnUrl::getAvailablePaymentActionsForReturnUrl($paymentId, $returnId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param Return $ret 
	* @return MozuClient
	*/
	public static function createReturnClient($ret, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ReturnUrl::createReturnUrl();
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($ret);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $paymentId 
	* @param string $returnId 
	* @param PaymentAction $action 
	* @return MozuClient
	*/
	public static function performPaymentActionForReturnClient($action,  $paymentId,  $returnId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ReturnUrl::performPaymentActionForReturnUrl($paymentId, $returnId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($action);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $returnId 
	* @param PaymentAction $action 
	* @return MozuClient
	*/
	public static function createPaymentActionForReturnClient($action,  $returnId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ReturnUrl::createPaymentActionForReturnUrl($returnId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($action);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param ReturnAction $action 
	* @return MozuClient
	*/
	public static function performReturnActionsClient($action, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ReturnUrl::performReturnActionsUrl();
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($action);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $returnId 
	* @param Return $ret 
	* @return MozuClient
	*/
	public static function updateReturnClient($ret,  $returnId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ReturnUrl::updateReturnUrl($returnId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($ret);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $returnId 
	*/
	public static function deleteReturnClient( $returnId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = ReturnUrl::deleteReturnUrl($returnId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	
}

?>

