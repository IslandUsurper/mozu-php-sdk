<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce\Returns;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\Returns\PackageUrl;

/**
* 
*/
class PackageClient {

	/**
	* 
	*
	* @param string $packageId 
	* @param string $returnId 
	* @return MozuClient
	*/
	public static function getPackageClient( $packageId,  $returnId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = PackageUrl::getPackageUrl($packageId, $returnId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $packageId 
	* @param string $returnId 
	*/
	public static function getPackageLabelClient( $packageId,  $returnId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = PackageUrl::getPackageLabelUrl($packageId, $returnId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $returnId 
	* @param Package $package 
	* @return MozuClient
	*/
	public static function createPackageClient($pkg,  $returnId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = PackageUrl::createPackageUrl($returnId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($pkg);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $packageId 
	* @param string $returnId 
	* @param Package $package 
	* @return MozuClient
	*/
	public static function updatePackageClient($pkg,  $packageId,  $returnId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = PackageUrl::updatePackageUrl($packageId, $returnId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($pkg);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $packageId 
	* @param string $returnId 
	*/
	public static function deletePackageClient( $packageId,  $returnId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = PackageUrl::deletePackageUrl($packageId, $returnId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	
}

?>

