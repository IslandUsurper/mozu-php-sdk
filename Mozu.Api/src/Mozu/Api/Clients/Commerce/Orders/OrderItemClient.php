<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce\Orders;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\Orders\OrderItemUrl;

/**
* 
*/
class OrderItemClient {

	/**
	* 
	*
	* @param bool $draft 
	* @param string $orderId 
	* @param string $orderItemId 
	* @return MozuClient
	*/
	public static function getOrderItemClient( $orderId,  $orderItemId, $draft =  null, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = OrderItemUrl::getOrderItemUrl($draft, $orderId, $orderItemId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param bool $draft 
	* @param string $orderId 
	* @return MozuClient
	*/
	public static function getOrderItemsClient( $orderId, $draft =  null, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = OrderItemUrl::getOrderItemsUrl($draft, $orderId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $orderId 
	* @param string $updateMode 
	* @param string $version 
	* @param OrderItem $orderItem 
	* @return MozuClient
	*/
	public static function createOrderItemClient($orderItem,  $orderId, $updateMode =  null, $version =  null, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = OrderItemUrl::createOrderItemUrl($orderId, $updateMode, $version);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($orderItem);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $discountId 
	* @param string $orderId 
	* @param string $orderItemId 
	* @param string $updateMode 
	* @param string $version 
	* @param AppliedDiscount $discount 
	* @return MozuClient
	*/
	public static function updateOrderItemDiscountClient($discount,  $discountId,  $orderId,  $orderItemId, $updateMode =  null, $version =  null, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = OrderItemUrl::updateOrderItemDiscountUrl($discountId, $orderId, $orderItemId, $updateMode, $version);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($discount);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $orderId 
	* @param string $orderItemId 
	* @param decimal $price 
	* @param string $updateMode 
	* @param string $version 
	* @return MozuClient
	*/
	public static function updateItemProductPriceClient( $orderId,  $orderItemId,  $price, $updateMode =  null, $version =  null, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = OrderItemUrl::updateItemProductPriceUrl($orderId, $orderItemId, $price, $updateMode, $version);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $orderId 
	* @param string $orderItemId 
	* @param int $quantity 
	* @param string $updateMode 
	* @param string $version 
	* @return MozuClient
	*/
	public static function updateItemQuantityClient( $orderId,  $orderItemId,  $quantity, $updateMode =  null, $version =  null, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = OrderItemUrl::updateItemQuantityUrl($orderId, $orderItemId, $quantity, $updateMode, $version);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $orderId 
	* @param string $orderItemId 
	* @param string $updateMode 
	* @param string $version 
	* @return MozuClient
	*/
	public static function deleteOrderItemClient( $orderId,  $orderItemId, $updateMode =  null, $version =  null, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = OrderItemUrl::deleteOrderItemUrl($orderId, $orderItemId, $updateMode, $version);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	
}

?>

