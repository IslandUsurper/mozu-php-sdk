<?php


/**
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce\Orders;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\Orders\PickupUrl;
use Mozu\Api\DataViewMode;
use Mozu\Api\Headers;

/**
* 
*/
class PickupClient {

	/**
	* 
	*
	* @param string $orderId 
	* @param string $pickupId 
	* @return MozuClient
	*/
	public static function getPickupClient( $orderId,  $pickupId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = PickupUrl::getPickupUrl($orderId, $pickupId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $orderId 
	* @param string $pickupId 
	* @return MozuClient
	*/
	public static function getAvailablePickupFulfillmentActionsClient( $orderId,  $pickupId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = PickupUrl::getAvailablePickupFulfillmentActionsUrl($orderId, $pickupId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $orderId 
	* @param Pickup $pickup 
	* @return MozuClient
	*/
	public static function createPickupClient($pickup,  $orderId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = PickupUrl::createPickupUrl($orderId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($pickup);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $orderId 
	* @param string $pickupId 
	* @param Pickup $pickup 
	* @return MozuClient
	*/
	public static function updatePickupClient($pickup,  $orderId,  $pickupId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = PickupUrl::updatePickupUrl($orderId, $pickupId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($pickup);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $orderId 
	* @param string $pickupId 
	*/
	public static function deletePickupClient( $orderId,  $pickupId, Mozu\Api\Security\AuthTicket &$authTicket= null)
	{
		$url = PickupUrl::deletePickupUrl($orderId, $pickupId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($authTicket);
		return $mozuClient;

	}
	
	
}

?>

