<?php


/**
* <auto-generated>
*     This code was generated by a Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Content;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Content\DocumentDraftSummaryUrl;
use Mozu\Api\DataViewMode;
use Mozu\Api\Headers;

/**
* Use the document publishing subresource to manage and publish document drafts in the Content service.
*/
class DocumentDraftSummaryClient {

	/**
	* Retrieves a list of the documents currently in draft state according to any sort criteria defined.
	*
	* @param string $documentLists Lists that contain the document drafts.
	* @param int $pageSize Used to create paged results from a query. Specifies the number of results to display on each page. Maximum: 200.
	* @param int $startIndex "Used to create paged results from a query. Indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3."
	* @return MozuClient
	*/
	public static function listDocumentDraftSummariesClient($dataViewMode, $pageSize =  null, $startIndex =  null, $documentLists =  null, Mozu\Api\Security\AuthTicket &$userAuthTicket= null)
	{
		$url = DocumentDraftSummaryUrl::listDocumentDraftSummariesUrl($documentLists, $pageSize, $startIndex);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($userAuthTicket);
		return $mozuClient;

	}
	
	/**
	* Deletes the drafts of the specified documents. Published documents cannot be deleted.
	*
	* @param string $documentLists List of document lists that contain documents to delete.
	* @param array|string $documentIds Unique identifiers of the documents to delete.
	*/
	public static function deleteDocumentDraftsClient($dataViewMode, $documentIds, $documentLists =  null, Mozu\Api\Security\AuthTicket &$userAuthTicket= null)
	{
		$url = DocumentDraftSummaryUrl::deleteDocumentDraftsUrl($documentLists);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($documentIds)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($userAuthTicket);
		return $mozuClient;

	}
	
	/**
	* Publish one or more document drafts to live content on the site.
	*
	* @param string $documentLists List of document lists that contain documents to publish.
	* @param array|string $documentIds List of unique identifiers of the document drafts to publish.
	*/
	public static function publishDocumentsClient($dataViewMode, $documentIds, $documentLists =  null, Mozu\Api\Security\AuthTicket &$userAuthTicket= null)
	{
		$url = DocumentDraftSummaryUrl::publishDocumentsUrl($documentLists);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($documentIds)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);
		if ($authTicket != null)
			$mozuClient = $mozuClient->withUserAuth($userAuthTicket);
		return $mozuClient;

	}
	
	
}

?>

